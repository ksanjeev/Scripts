<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0045)http://zhengol.blogspot.com/search/label/Perl -->
<HTML dir=ltr><HEAD><TITLE>Zhengol: Let's start here: Perl</TITLE>
<SCRIPT type=text/javascript>(function() { var a=window;function d(){this.t={};this.tick=function(b,c){this.t[b]=[(new Date).getTime(),c]};this.tick("start")}var e=new d;a.jstiming={Timer:d,load:e};if(a.external&&a.external.pageT)a.jstiming.pt=a.external.pageT;function f(b){var c=0;if(b.offsetParent){do c+=b.offsetTop;while(b=b.offsetParent)}return c}a.tickAboveFold=function(b){f(b)<=750&&a.jstiming.load.tick("aft")};var g=false;function h(){if(!g){g=true;a.jstiming.load.tick("firstScrollTime")}}a.addEventListener?a.addEventListener("scroll",h,false):a.attachEvent("onscroll",h); })();</SCRIPT>

<META http-equiv=Content-Type content="text/html; charset=UTF-8">
<META content=true name=MSSmartTagsPreventParsing>
<META content="MSHTML 6.00.2600.0" name=GENERATOR><LINK 
href="http://www.blogger.com/favicon.ico" type=image/vnd.microsoft.icon 
rel=icon><LINK title="Zhengol: Let's start here - Atom" 
href="http://zhengol.blogspot.com/feeds/posts/default" type=application/atom+xml 
rel=alternate><LINK title="Zhengol: Let's start here - RSS" 
href="http://zhengol.blogspot.com/feeds/posts/default?alt=rss" 
type=application/rss+xml rel=alternate><LINK 
title="Zhengol: Let's start here - Atom" 
href="http://www.blogger.com/feeds/4956808384161899942/posts/default" 
type=application/atom+xml rel=service.post><LINK title=RSD 
href="http://www.blogger.com/rsd.g?blogID=4956808384161899942" 
type=application/rsd+xml rel=EditURI><LINK 
href="http://www.blogger.com/profile/00847477265238671590" rel=me><LINK 
href="http://www.blogger.com/openid-server.g" rel=openid.server>
<STYLE id=page-skin-1 type=text/css>BODY {
	BACKGROUND: #ccc; MARGIN: 0px; FONT: small Trebuchet MS, Verdana, Arial, Sans-serif; COLOR: #000000; TEXT-ALIGN: center
}
#outer-wrapper {
	MARGIN: 0px auto; FONT: 100% 'Trebuchet MS',Verdana,Arial,Sans-serif; WIDTH: 740px; TEXT-ALIGN: left
}
#main-wrap1 {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; FONT-SIZE: 97%; BACKGROUND: url(http://www1.blogblog.com/rounders2/corners_main_bot.gif) #ffffff no-repeat left bottom; FLOAT: left; PADDING-BOTTOM: 10px; MARGIN: 15px 0px 0px; OVERFLOW: hidden; WIDTH: 485px; COLOR: #000000; LINE-HEIGHT: 1.5em; PADDING-TOP: 0px; WORD-WRAP: break-word
}
#main-wrap2 {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; BACKGROUND: url(http://www1.blogblog.com/rounders2/corners_main_top.gif) no-repeat left top; FLOAT: left; PADDING-BOTTOM: 0px; WIDTH: 100%; PADDING-TOP: 10px
}
#main {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; BACKGROUND: url(http://www.blogblog.com/rounders2/rails_main.gif) repeat-y left 50%; PADDING-BOTTOM: 0px; WIDTH: 485px; PADDING-TOP: 0px
}
#sidebar-wrap {
	FONT-SIZE: 97%; FLOAT: right; MARGIN: 15px 0px 0px; OVERFLOW: hidden; WIDTH: 240px; LINE-HEIGHT: 1.5em; WORD-WRAP: break-word
}
.main .widget {
	PADDING-RIGHT: 13px; MARGIN-TOP: 4px; PADDING-LEFT: 13px; PADDING-BOTTOM: 0px; WIDTH: 468px; PADDING-TOP: 0px
}
.main .Blog {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; WIDTH: 484px; PADDING-TOP: 0px
}
A:link {
	COLOR: #bb3300
}
A:visited {
	COLOR: #cc6633
}
A:hover {
	COLOR: #cc6633
}
A IMG {
	BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px
}
#header-wrapper {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; BACKGROUND: url(http://www2.blogblog.com/rounders2/corners_cap_top.gif) #771100 no-repeat left top; PADDING-BOTTOM: 0px; MARGIN: 22px 0px 0px; COLOR: #ffffff; PADDING-TOP: 8px
}
#header {
	PADDING-RIGHT: 15px; PADDING-LEFT: 15px; BACKGROUND: url(http://www.blogblog.com/rounders2/corners_cap_bot.gif) no-repeat left bottom; PADDING-BOTTOM: 8px; PADDING-TOP: 0px
}
#header H1 {
	PADDING-RIGHT: 30px; PADDING-LEFT: 30px; PADDING-BOTTOM: 5px; MARGIN: 0px; FONT: bold 200% 'Trebuchet MS',Verdana,Arial,Sans-serif; PADDING-TOP: 10px
}
#header A {
	COLOR: #ffffff; TEXT-DECORATION: none
}
#header A:visited {
	COLOR: #ffffff; TEXT-DECORATION: none
}
#header .description {
	PADDING-RIGHT: 30px; PADDING-LEFT: 30px; PADDING-BOTTOM: 10px; MARGIN: 0px; FONT: 100% 'Trebuchet MS',Verdana,Arial,Sans-serif; PADDING-TOP: 5px
}
H2.date-header {
	FONT-SIZE: 85%; MARGIN: 0px 28px 0px 43px; TEXT-TRANSFORM: uppercase; COLOR: #881100; LINE-HEIGHT: 2em; LETTER-SPACING: 0.2em
}
.post {
	BORDER-RIGHT: #bbbbbb 0px dotted; PADDING-RIGHT: 13px; BORDER-TOP: #bbbbbb 1px dotted; PADDING-LEFT: 13px; PADDING-BOTTOM: 0px; MARGIN: 0.3em 0px 25px; BORDER-LEFT: #bbbbbb 0px dotted; PADDING-TOP: 0px; BORDER-BOTTOM: #bbbbbb 1px dotted
}
.post H3 {
	BORDER-RIGHT: #bbbbbb 1px dotted; PADDING-RIGHT: 14px; BORDER-TOP: #bbbbbb 0px dotted; DISPLAY: block; PADDING-LEFT: 29px; BACKGROUND: url(http://www2.blogblog.com/rounders2/icon_arrow.gif) no-repeat 10px 0.5em; PADDING-BOTTOM: 2px; MARGIN: 0px; FONT: bold 135% 'Trebuchet MS',Verdana,Arial,Sans-serif; BORDER-LEFT: #bbbbbb 1px dotted; COLOR: #333333; PADDING-TOP: 2px; BORDER-BOTTOM: #bbbbbb 1px dotted
}
.post H3 A {
	COLOR: #333333; TEXT-DECORATION: none
}
.post H3 A:visited {
	COLOR: #333333; TEXT-DECORATION: none
}
A.title-link:hover {
	COLOR: #000000; BACKGROUND-COLOR: #bbbbbb
}
.post-body {
	BORDER-RIGHT: #bbbbbb 1px dotted; PADDING-RIGHT: 14px; BORDER-TOP: #bbbbbb 0px dotted; PADDING-LEFT: 29px; PADDING-BOTTOM: 1px; BORDER-LEFT: #bbbbbb 1px dotted; PADDING-TOP: 10px; BORDER-BOTTOM: #ffffff 1px dotted
}
UNKNOWN {
	BORDER-BOTTOM-WIDTH: 0px
}
.post-body {
	MARGIN: 0px 0px 0.75em
}
.post-body BLOCKQUOTE {
	LINE-HEIGHT: 1.3em
}
.post-footer {
	BORDER-RIGHT: #bbbbbb 1px dotted; PADDING-RIGHT: 14px; BORDER-TOP: #bbbbbb 1px dotted; PADDING-LEFT: 29px; FONT-SIZE: 100%; BACKGROUND: #eee; PADDING-BOTTOM: 2px; MARGIN: 0px; BORDER-LEFT: #bbbbbb 1px dotted; COLOR: #666; LINE-HEIGHT: 1.5em; PADDING-TOP: 2px; BORDER-BOTTOM: #bbbbbb 1px dotted
}
.post-footer-line-1 {
	MIN-HEIGHT: 1.5em; HEIGHT: 1.5em
}
.post-footer P {
	MARGIN: 0px
}
UNKNOWN {
	BORDER-BOTTOM-COLOR: transparent
}
.uncustomized-post-template .post-footer {
	TEXT-ALIGN: right
}
.uncustomized-post-template .post-author {
	DISPLAY: block; FLOAT: left; MARGIN-RIGHT: 4px; TEXT-ALIGN: left
}
.uncustomized-post-template .post-timestamp {
	DISPLAY: block; FLOAT: left; MARGIN-RIGHT: 4px; TEXT-ALIGN: left
}
.post-footer A {
	COLOR: #bb3300
}
.post-footer A:hover {
	COLOR: #cc6633
}
A.comment-link {
	PADDING-LEFT: 14px; BACKGROUND: url(http://www.blogblog.com/rounders/icon_comment_left.gif) no-repeat left 45%
}
UNKNOWN {
	PADDING-LEFT: 14px; BACKGROUND: url(http://www.blogblog.com/rounders2/icon_comment_left.gif) no-repeat left 45%
}
.post IMG {
	BORDER-RIGHT: #bbbbbb 1px solid; PADDING-RIGHT: 4px; BORDER-TOP: #bbbbbb 1px solid; PADDING-LEFT: 4px; PADDING-BOTTOM: 4px; MARGIN: 0px 0px 5px; BORDER-LEFT: #bbbbbb 1px solid; PADDING-TOP: 4px; BORDER-BOTTOM: #bbbbbb 1px solid
}
BLOCKQUOTE {
	BORDER-RIGHT: #bbbbbb 0px dotted; PADDING-RIGHT: 15px; BORDER-TOP: #bbbbbb 1px dotted; PADDING-LEFT: 15px; PADDING-BOTTOM: 5px; MARGIN: 0.75em 0px; BORDER-LEFT: #bbbbbb 0px dotted; COLOR: #881100; PADDING-TOP: 5px; BORDER-BOTTOM: #bbbbbb 1px dotted
}
.post BLOCKQUOTE P {
	MARGIN: 0.5em 0px
}
#blog-pager-newer-link {
	FLOAT: left; MARGIN-LEFT: 13px
}
#blog-pager-older-link {
	FLOAT: right; MARGIN-RIGHT: 13px
}
#blog-pager {
	TEXT-ALIGN: center
}
.feed-links {
	CLEAR: both; MARGIN-LEFT: 13px; LINE-HEIGHT: 2.5em
}
#comments {
	BORDER-RIGHT: #bbbbbb 1px dotted; PADDING-RIGHT: 0px; BORDER-TOP: #bbbbbb 0px dotted; PADDING-LEFT: 0px; PADDING-BOTTOM: 15px; MARGIN: -25px 13px 0px; BORDER-LEFT: #bbbbbb 1px dotted; PADDING-TOP: 20px; BORDER-BOTTOM: #bbbbbb 1px dotted
}
#comments H4 {
	PADDING-RIGHT: 14px; PADDING-LEFT: 29px; FONT-SIZE: 120%; PADDING-BOTTOM: 2px; MARGIN: 0px 0px 10px; COLOR: #333333; LINE-HEIGHT: 1.4em; PADDING-TOP: 0px; BORDER-BOTTOM: #bbbbbb 1px dotted
}
#comments-block {
	MARGIN: 0px 15px 0px 9px
}
.comment-author {
	PADDING-RIGHT: 0px; PADDING-LEFT: 20px; FONT-WEIGHT: bold; BACKGROUND: url(http://www.blogblog.com/rounders2/icon_comment_left.gif) no-repeat 2px 0.3em; PADDING-BOTTOM: 0px; MARGIN: 0.5em 0px; PADDING-TOP: 0px
}
.comment-body {
	PADDING-RIGHT: 0px; PADDING-LEFT: 20px; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 1.25em; PADDING-TOP: 0px
}
.comment-body P {
	MARGIN: 0px 0px 0.5em
}
.comment-footer {
	PADDING-RIGHT: 0px; PADDING-LEFT: 20px; PADDING-BOTTOM: 0.75em; MARGIN: 0px 0px 0.5em; PADDING-TOP: 0px
}
.comment-footer A:link {
	COLOR: #000000
}
.deleted-comment {
	COLOR: gray; FONT-STYLE: italic
}
.comment-form {
	PADDING-RIGHT: 5px; PADDING-LEFT: 20px
}
#comments .comment-form H4 {
	PADDING-LEFT: 0px
}
.profile-img {
	BORDER-RIGHT: #ffffff 4px solid; BORDER-TOP: #ffffff 4px solid; FLOAT: left; MARGIN: 5px 5px 5px 0px; BORDER-LEFT: #ffffff 4px solid; BORDER-BOTTOM: #ffffff 4px solid
}
.profile-datablock {
	MARGIN: 0px 15px 0.5em 0px; PADDING-TOP: 8px
}
.profile-link {
	PADDING-LEFT: 15px; FONT-WEIGHT: bold; BACKGROUND: url(http://www.blogblog.com/rounders2/icon_profile_left.gif) no-repeat left 0.1em
}
.profile-textblock {
	CLEAR: both; MARGIN: 0px
}
.sidebar .clear {
	CLEAR: both
}
.main .widget .clear {
	CLEAR: both
}
#sidebartop-wrap {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; BACKGROUND: url(http://www.blogblog.com/rounders2/corners_prof_bot.gif) #999999 no-repeat left bottom; PADDING-BOTTOM: 10px; MARGIN: 0px 0px 15px; COLOR: #ffffff; PADDING-TOP: 0px
}
#sidebartop-wrap2 {
	BORDER-TOP-WIDTH: 0px; PADDING-RIGHT: 0px; PADDING-LEFT: 0px; BORDER-LEFT-WIDTH: 0px; BACKGROUND: url(http://www2.blogblog.com/rounders2/corners_prof_top.gif) no-repeat left top; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-TOP: 10px; BORDER-RIGHT-WIDTH: 0px
}
#sidebartop H2 {
	MARGIN-BOTTOM: 0.5em; FONT: bold 100% 'Trebuchet MS',Verdana,Arial,Sans-serif; COLOR: #ffffff; BORDER-BOTTOM: #ffffff 1px dotted
}
#sidebartop A {
	COLOR: #ffffff
}
#sidebartop A:hover {
	COLOR: #dddddd
}
#sidebartop A:visited {
	COLOR: #dddddd
}
.sidebar .widget {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0.5em 13px 1.25em; PADDING-TOP: 0px
}
.widget-content {
	MARGIN-TOP: 0.5em
}
#sidebarbottom-wrap1 {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; BACKGROUND: url(http://www.blogblog.com/rounders2/corners_side_top.gif) #ffffff no-repeat left top; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 15px; COLOR: #000000; PADDING-TOP: 10px
}
#sidebarbottom-wrap2 {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; BACKGROUND: url(http://www1.blogblog.com/rounders2/corners_side_bot.gif) no-repeat left bottom; PADDING-BOTTOM: 8px; PADDING-TOP: 0px
}
.sidebar H2 {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0.2em; MARGIN: 0px; FONT: bold 100% 'Trebuchet MS',Verdana,Arial,Sans-serif; PADDING-TOP: 0px
}
.sidebar UL {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 1.25em; PADDING-TOP: 0px; LIST-STYLE-TYPE: none
}
.sidebar UL LI {
	PADDING-RIGHT: 0px; PADDING-LEFT: 16px; BACKGROUND: url(http://www2.blogblog.com/rounders2/icon_arrow_sm.gif) no-repeat 2px 0.25em; PADDING-BOTTOM: 3px; MARGIN: 0px 0px 3px; LINE-HEIGHT: 1.4em; PADDING-TOP: 0px; BORDER-BOTTOM: #bbbbbb 1px dotted
}
.sidebar P {
	MARGIN: 0px 0px 0.6em
}
#sidebar H2 {
	COLOR: #333333; BORDER-BOTTOM: #333333 1px dotted
}
#footer-wrap1 {
	CLEAR: both; PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 10px; PADDING-TOP: 15px
}
#footer-wrap2 {
	BACKGROUND: url(http://www2.blogblog.com/rounders2/corners_cap_top.gif) #771100 no-repeat left top; COLOR: #ffffff
}
#footer {
	PADDING-RIGHT: 15px; PADDING-LEFT: 15px; BACKGROUND: url(http://www.blogblog.com/rounders2/corners_cap_bot.gif) no-repeat left bottom; PADDING-BOTTOM: 8px; PADDING-TOP: 8px
}
#footer HR {
	DISPLAY: none
}
#footer P {
	MARGIN: 0px
}
#footer A {
	COLOR: #ffffff
}
#footer .widget-content {
	MARGIN: 0px
}
BODY#layout #main-wrap1 {
	MARGIN-TOP: 0px
}
BODY#layout #sidebar-wrap {
	MARGIN-TOP: 0px
}
BODY#layout #header-wrapper {
	MARGIN-TOP: 0px
}
BODY#layout #header {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px
}
BODY#layout #header-wrapper {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px
}
BODY#layout #outer-wrapper {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px
}
BODY#layout #outer-wrapper {
	WIDTH: 730px
}
BODY#layout #footer-wrap1 {
	PADDING-TOP: 0px
}
</STYLE>
<LINK 
href="Zhengol Let's start here Perl_files/2300090209-widget_css_bundle.css" 
type=text/css rel=stylesheet><LINK 
href="Zhengol Let's start here Perl_files/3727950723-blog_controls.css" 
type=text/css rel=stylesheet><LINK 
href="Zhengol Let's start here Perl_files/authorization.css" type=text/css 
rel=stylesheet>
<STYLE type=text/css>#navbar-iframe {
	DISPLAY: block
}
</STYLE>
</HEAD>
<BODY>
<DIV class="navbar section" id=navbar>
<DIV class="widget Navbar" id=Navbar1>
<SCRIPT type=text/javascript>
    function setAttributeOnload(object, attribute, val) {
      if(window.addEventListener) {
        window.addEventListener("load",
          function(){ object[attribute] = val; }, false);
      } else {
        window.attachEvent('onload', function(){ object[attribute] = val; });
      }
    }
  </SCRIPT>
<IFRAME id=navbar-iframe title="Blogger Navigation and Search" marginWidth=0 
marginHeight=0 src="Zhengol Let's start here Perl_files/navbar.htm" 
frameBorder=0 width="100%" scrolling=no height=30></IFRAME>
<DIV></DIV></DIV></DIV>
<DIV id=outer-wrapper>
<DIV id=header-wrapper>
<DIV class="header section" id=header>
<DIV class="widget Header" id=Header1>
<DIV id=header-inner 
style="BACKGROUND-POSITION: left 50%; MIN-HEIGHT: 120px; BACKGROUND-IMAGE: url(http://1.bp.blogspot.com/_jv5mJqcnSPc/SKe1Tx1MoDI/AAAAAAAADIM/uMyR8A8235c/S1600-R/222.jpg); WIDTH: 710px; BACKGROUND-REPEAT: no-repeat; HEIGHT: 120px">
<DIV class=titlewrapper 
style="BACKGROUND: none transparent scroll repeat 0% 0%">
<H1 class=title 
style="BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px"><A 
href="http://zhengol.blogspot.com/">Zhengol: Let's start here</A> </H1></DIV>
<DIV class=descriptionwrapper>
<P class=description><SPAN></SPAN></P></DIV></DIV></DIV></DIV></DIV>
<DIV id=crosscol-wrapper style="TEXT-ALIGN: center">
<DIV class="crosscol section" id=crosscol></DIV></DIV>
<DIV id=main-wrap1>
<DIV id=main-wrap2>
<DIV class="main section" id=main>
<DIV class="widget Profile" id=Profile1>
<H2>About Me</H2>
<DIV class=widget-content><A 
href="http://www.blogger.com/profile/00847477265238671590"><IMG 
class=profile-img height=53 alt="My Photo" 
src="Zhengol Let's start here Perl_files/y1pt2qI3-VA0P1lXFv3rsAOYv6SBeEiUbk3Ns07Pti9paRbKWwwNsFhZpZabZcPMJCA.jpg" 
width=80></A> 
<DL class=profile-datablock>
  <DT class=profile-data>OO </DT></DL><A class=profile-link 
href="http://www.blogger.com/profile/00847477265238671590">View my complete 
profile</A> 
<DIV class=clear></DIV><SPAN class=widget-item-control><SPAN 
class="item-control blog-admin"><A class=quickedit title=Edit 
onclick='return _WidgetManager._PopupConfig(document.getElementById("Profile1"));' 
href="http://www.blogger.com/rearrange?blogID=4956808384161899942&amp;widgetType=Profile&amp;widgetId=Profile1&amp;action=editWidget" 
target=configProfile1><IMG height=18 alt="" 
src="Zhengol Let's start here Perl_files/icon18_wrench_allbkg.png" width=18> 
</A></SPAN></SPAN>
<DIV class=clear></DIV></DIV></DIV>
<DIV class="widget Blog" id=Blog1>
<DIV class="blog-posts hfeed">
<DIV class=status-msg-wrap>
<DIV class=status-msg-body>Showing posts with label <B>Perl</B>. <A 
href="http://zhengol.blogspot.com/">Show all posts</A> </DIV>
<DIV class=status-msg-border>
<DIV class=status-msg-bg>
<DIV class=status-msg-hidden>Showing posts with label <B>Perl</B>. <A 
href="http://zhengol.blogspot.com/">Show all posts</A></DIV></DIV></DIV></DIV>
<DIV style="CLEAR: both"></DIV><!-- google_ad_section_start -->
<H2 class=date-header>Tuesday, August 28, 2007</H2>
<DIV class="post hentry"><A name=1281940215200140670></A>
<H3 class="post-title entry-title"><A 
href="http://zhengol.blogspot.com/2007/08/using-system-and-exec-part-9-perl-study.html">Using 
system and exec (Part 9)-- Perl Study Notes</A> </H3>
<DIV class=post-header-line-1></DIV>
<DIV class="post-body entry-content"><!-- Converted from text/rtf format -->
<P align=center><FONT face="Times New Roman">Using system and exec (Part 9)-- 
Perl Study Notes</FONT></P>
<P><FONT face="Times New Roman">Execute command shelll</FONT> </P>
<P><FONT face="Times New Roman">&nbsp; Using system commad</FONT> 
<UL>
  <P><FONT face="Times New Roman"></FONT> <BR><FONT face="Times New Roman">the 
  function system to invoke the shell command and return the exist code until 
  the&nbsp; shell command finished </FONT><BR><FONT 
  face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp; #example of system command 
  usage</FONT> <BR><FONT face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp; 
  #example 1</FONT> <BR><FONT face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp; 
  #execute the date and output the result to the file right_now. 
  </FONT><BR><FONT face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp; #output one 
  message and exit if the command fails</FONT> <BR><FONT 
  face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; system("date 
  &gt;right_now") &amp;&amp; die "cannot create right_now"; </FONT></P>
  <P><FONT face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp; #example 2</FONT> 
  <BR><FONT face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp; $where = 
  "who_out.".++$i; </FONT><BR><FONT 
  face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp; #command followed $ like 
  below, the shell will return without waiting </FONT><BR><FONT 
  face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp; # for the command 
  finished.&nbsp;&nbsp;&nbsp; </FONT><BR><FONT 
  face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp; # in below case, the return 
  value is true if the command is executed or</FONT> <BR><FONT 
  face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp; # false if the command is not 
  invoked successfully.</FONT> <BR><FONT 
  face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp; system "(date) &gt;$where 
  </FONT></P>
  <P><FONT face="Times New Roman">system can also receive command arguments, for 
  example</FONT> <BR><FONT face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp; 
  #example </FONT><BR><FONT face="Times New Roman">&nbsp;&nbsp;&nbsp; 
  @args1=qw(perl.exe C:\clearquest\MultiScript\cq_exportol_zl.pl)</FONT> 
  <BR><FONT face="Times New Roman">system(@args1)==0 || die "system @args 
  failed: $?" </FONT></P>
  <P><FONT face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp; </FONT><BR><FONT 
  face="Times New Roman">system can run multiple command and separated with 
  comma, but the return value is not the exit code of each command but the 
  successful or not indicator of invoking the command</FONT></P><BR></UL>
<P><FONT face="Times New Roman">Using backslash </FONT>
<UL>
  <P><FONT face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp; #example 1</FONT> 
  <BR><FONT face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp; # get each output 
  line of the command dir in each iternation</FONT> <BR><FONT 
  face="Times New Roman">&nbsp;&nbsp;&nbsp; foreach (`dir`)&nbsp;&nbsp;&nbsp; 
  </FONT><BR><FONT face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp; {</FONT> 
  <BR><FONT face="Times New Roman">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
  chomp();&nbsp;&nbsp; </FONT><BR><FONT 
  face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
  #get only file lists and exclude the folder</FONT> <BR><FONT 
  face="Times New Roman">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; unless 
  (/&lt;DIR&gt;/)&nbsp; </FONT><BR><FONT 
  face="Times New Roman">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {</FONT> 
  <BR><FONT 
  face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
  ($modify_date,$modify_time,$amorpm,$filename)=/(\S+)\s+(\S+)\s(\S+)\s+\S+\s+(.*)/; 
  </FONT><BR><FONT face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
  print "$filename is created at $modify_date $modify_time $amorpm"; 
  </FONT><BR><FONT 
  face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
  }</FONT> <BR><FONT 
  face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</FONT> 
  <BR><FONT face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
  </FONT></P></UL>
<P><FONT face="Times New Roman">&nbsp; Using filehandles</FONT> <BR><FONT 
face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #example 1</FONT> 
<BR><FONT face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # to get 
the result to print the line which contains zhengol</FONT> <BR><FONT 
face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; open (COMMANDOUTPUT, 
"dir|");</FONT> <BR><FONT 
face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach 
(&lt;COMMANDOUTPUT&gt;)</FONT> <BR><FONT 
face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{</FONT> <BR><FONT 
face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
#print the user containing zhengol</FONT> <BR><FONT 
face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
print if (/DIR/);</FONT> <BR><FONT 
face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</FONT> <BR><FONT face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
close (COMMANDOUTPUT);</FONT> </P>
<P><FONT face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
#example 2</FONT> <BR><FONT 
face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #to print the 
message to the printer</FONT> <BR><FONT 
face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
open(COMMANDINPUT, "|lpr -Pslatewriter");</FONT> <BR><FONT 
face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print 
COMMANDINPUT, "Testing Message";</FONT> <BR><FONT 
face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
close(COMMANDOUTPUT) ;</FONT> <BR><FONT face="Times New Roman">&nbsp; 
</FONT><BR><FONT face="Times New Roman">&nbsp; Using 
folk/exec/wait/waitpid</FONT> <BR><FONT 
face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp; fork to clone current process to 
run&nbsp;&nbsp;&nbsp;&nbsp; </FONT><BR><FONT 
face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp; #example 1</FONT> 
<UL>
  <P><FONT face="Times New Roman">if (!defined($kidpid = fork())) {</FONT> 
  <BR><FONT face="Times New Roman">&nbsp;&nbsp; # fork returned undef, so 
  failed</FONT> <BR><FONT face="Times New Roman">&nbsp;&nbsp;&nbsp; die "cannot 
  fork: $!";</FONT> <BR><FONT face="Times New Roman">} elsif ($kidpid == 0) 
  {</FONT> <BR><FONT face="Times New Roman">&nbsp;&nbsp;&nbsp; # fork returned 
  0, so this branch is the child</FONT> <BR><FONT 
  face="Times New Roman">&nbsp;&nbsp;&nbsp; exec("date");</FONT> <BR><FONT 
  face="Times New Roman">&nbsp;&nbsp;&nbsp; # if the exec fails, fall through to 
  the next statement</FONT> <BR><FONT 
  face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp; die "can't exec date: 
  $!";</FONT> <BR><FONT face="Times New Roman">} else {</FONT> <BR><FONT 
  face="Times New Roman">&nbsp;&nbsp;&nbsp; # fork returned neither 0 nor 
  undef,</FONT> <BR><FONT face="Times New Roman">&nbsp;&nbsp;&nbsp; # so this 
  branch is the parent</FONT> <BR><FONT 
  face="Times New Roman">&nbsp;&nbsp;&nbsp; waitpid($kidpid, 0);</FONT> 
  <BR><FONT face="Times New Roman">}</FONT> </P></UL>
<DIV style="CLEAR: both"></DIV></DIV>
<DIV class=post-footer>
<DIV class="post-footer-line post-footer-line-1"><SPAN 
class="post-author vcard">Posted by <SPAN class=fn>OO</SPAN> </SPAN><SPAN 
class=post-timestamp>at <A class=timestamp-link title="permanent link" 
href="http://zhengol.blogspot.com/2007/08/using-system-and-exec-part-9-perl-study.html" 
rel=bookmark><ABBR class=published title=2007-08-28T20:54:00+08:00>8:54 
PM</ABBR></A> </SPAN><SPAN class=post-comment-link><A class=comment-link 
onclick="" 
href="https://www.blogger.com/comment.g?blogID=4956808384161899942&amp;postID=1281940215200140670">0 
comments</A> </SPAN><SPAN class=post-icons><SPAN class=item-action><A 
title="Email Post" 
href="http://www.blogger.com/email-post.g?blogID=4956808384161899942&amp;postID=1281940215200140670"><IMG 
class=icon-action height=13 alt="" 
src="Zhengol Let's start here Perl_files/icon18_email.gif" width=18> 
</A></SPAN><SPAN class="item-control blog-admin pid-1453504744"><A 
title="Edit Post" 
href="http://www.blogger.com/post-edit.g?blogID=4956808384161899942&amp;postID=1281940215200140670"><IMG 
class=icon-action height=18 alt="" 
src="Zhengol Let's start here Perl_files/icon18_edit_allbkg.gif" width=18> 
</A></SPAN></SPAN></DIV>
<DIV class="post-footer-line post-footer-line-2"><SPAN class=post-labels>Labels: 
<A href="http://zhengol.blogspot.com/search/label/Perl" rel=tag>Perl</A> 
</SPAN></DIV>
<DIV class="post-footer-line post-footer-line-3"><SPAN 
class=post-location></SPAN></DIV></DIV></DIV>
<H2 class=date-header>Wednesday, August 8, 2007</H2>
<DIV class="post hentry"><A name=182359143194184174></A>
<H3 class="post-title entry-title"><A 
href="http://zhengol.blogspot.com/2007/08/directory-access-file-and-directory.html">Directory 
Access &amp;&amp; File and Directory Manipulation (Part 8)-- Perl Study 
Notes</A> </H3>
<DIV class=post-header-line-1></DIV>
<DIV class="post-body entry-content"><!-- Converted from text/rtf format -->
<P align=center><FONT face=Verdana size=2>Directory Access &amp;&amp; File and 
Directory Manipulation (Part 8)-- Perl Study Notes</FONT></P>
<P><B><FONT face=Verdana size=2>&nbsp;Change Directory Tree</FONT></B> <BR><FONT 
face=Verdana size=2>&nbsp; chdir($dirpath);</FONT> <BR><FONT face=Verdana 
size=2>&nbsp; #here is the example</FONT> <BR><FONT face=Verdana size=2>&nbsp; 
print "where do you want to go?"</FONT> <BR><FONT face=Verdana size=2>&nbsp; 
chomp($toPath=&lt;STDIN&gt;);</FONT> <BR><FONT face=Verdana size=2>&nbsp; 
if(chdir $where){</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp; # we got 
there</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp; }</FONT> <BR><FONT 
face=Verdana size=2>&nbsp;&nbsp; else</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp; {</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp; # we 
cannot go there</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp; }</FONT> 
<BR><FONT face=Verdana size=2>&nbsp;</FONT> <BR><B><FONT face=Verdana 
size=2>&nbsp;Globing</FONT></B> <BR><FONT face=Verdana size=2>&nbsp; 
&lt;$pattern&gt;; #In array context, it returns all files, the folder as well, 
matched the pattern. In scalar context, it returns the next file name it matched 
the pattern</FONT></P>
<P><FONT face=Verdana size=2>&nbsp; glob($pattern); #it is equivalent to 
&lt;$pattern&gt;</FONT> <BR><FONT face=Verdana size=2>&nbsp; 
@a=&lt;c:/temp/*&gt;; #it returns all file lists</FONT> <BR><FONT face=Verdana 
size=2>&nbsp; @a=glob("c:/temp/*); # same as above</FONT> <BR><FONT face=Verdana 
size=2>&nbsp; while ($filename=&lt;c:/temp/*&gt;) # return the next filename, 
the folder as well, in each iteration</FONT> <BR><FONT face=Verdana 
size=2>&nbsp; {</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp; print 
"one of the file name is $filename";</FONT> <BR><FONT face=Verdana size=2>&nbsp; 
}</FONT> <BR><FONT face=Verdana size=2>&nbsp; </FONT><BR><FONT face=Verdana 
size=2>&nbsp;&nbsp; while ($filename=glob("c:/temp/*") # return the next 
filename, the folder as well, in each iteration</FONT> <BR><FONT face=Verdana 
size=2>&nbsp; {</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp; print 
"one of the file name is $filename";</FONT> <BR><FONT face=Verdana size=2>&nbsp; 
}</FONT> <BR><FONT face=Verdana size=2>&nbsp; </FONT><BR><FONT face=Verdana 
size=2>&nbsp; #pls be notes although file blobbing and regular-expression 
matching function similarly</FONT> <BR><FONT face=Verdana size=2>&nbsp; #the 
meaning of the various special characters in quite different</FONT> <BR><FONT 
face=Verdana size=2>&nbsp; #the *,[] can be used in the pattern</FONT> <BR><FONT 
face=Verdana size=2>&nbsp;</FONT> <BR><B><FONT face=Verdana 
size=2>&nbsp;Directory Handlers</FONT></B> <BR><FONT face=Verdana size=2>&nbsp; 
opendir(DirectoryHandler,$pathname);</FONT> <BR><FONT face=Verdana size=2>&nbsp; 
readdir(DirectoryHandler); #in array context, it returns all fills , the folder 
as well, under the path. in scalar context, it returns the next file(folder) 
name under the path</FONT></P>
<P><FONT face=Verdana size=2>&nbsp; closedir(DirectoryHandler);</FONT> </P>
<DIV style="CLEAR: both"></DIV></DIV>
<DIV class=post-footer>
<DIV class="post-footer-line post-footer-line-1"><SPAN 
class="post-author vcard">Posted by <SPAN class=fn>OO</SPAN> </SPAN><SPAN 
class=post-timestamp>at <A class=timestamp-link title="permanent link" 
href="http://zhengol.blogspot.com/2007/08/directory-access-file-and-directory.html" 
rel=bookmark><ABBR class=published title=2007-08-08T19:16:00+08:00>7:16 
PM</ABBR></A> </SPAN><SPAN class=post-comment-link><A class=comment-link 
onclick="" 
href="https://www.blogger.com/comment.g?blogID=4956808384161899942&amp;postID=182359143194184174">0 
comments</A> </SPAN><SPAN class=post-icons><SPAN class=item-action><A 
title="Email Post" 
href="http://www.blogger.com/email-post.g?blogID=4956808384161899942&amp;postID=182359143194184174"><IMG 
class=icon-action height=13 alt="" 
src="Zhengol Let's start here Perl_files/icon18_email.gif" width=18> 
</A></SPAN><SPAN class="item-control blog-admin pid-1453504744"><A 
title="Edit Post" 
href="http://www.blogger.com/post-edit.g?blogID=4956808384161899942&amp;postID=182359143194184174"><IMG 
class=icon-action height=18 alt="" 
src="Zhengol Let's start here Perl_files/icon18_edit_allbkg.gif" width=18> 
</A></SPAN></SPAN></DIV>
<DIV class="post-footer-line post-footer-line-2"><SPAN class=post-labels>Labels: 
<A href="http://zhengol.blogspot.com/search/label/Perl" rel=tag>Perl</A>, <A 
href="http://zhengol.blogspot.com/search/label/Technical" rel=tag>Technical</A> 
</SPAN></DIV>
<DIV class="post-footer-line post-footer-line-3"><SPAN 
class=post-location></SPAN></DIV></DIV></DIV>
<H2 class=date-header>Monday, August 6, 2007</H2>
<DIV class="post hentry"><A name=2092225417191716346></A>
<H3 class="post-title entry-title"><A 
href="http://zhengol.blogspot.com/2007/08/format-part-7-perl-study-notes.html">Format 
(Part 7)-- Perl Study Notes</A> </H3>
<DIV class=post-header-line-1></DIV>
<DIV class="post-body entry-content">
<META content="MS Exchange Server version 6.0.6619.12" name=Generator><!-- Converted from text/rtf format -->
<P align=center><B><SPAN lang=zh-cn><FONT face=Verdana size=2>Format (Part 7)-- 
Perl Study Notes</FONT></SPAN></B><SPAN lang=zh-cn></SPAN></P>
<P><SPAN lang=zh-cn><B><FONT face=Verdana size=2>&nbsp;The steps to use 
format</FONT></B></SPAN> <BR><SPAN lang=zh-cn><FONT face=Verdana size=2>&nbsp;1. 
Define the format</FONT></SPAN> <BR><SPAN lang=zh-cn><FONT face=Verdana 
size=2>&nbsp;2. Loading up the data to be printed into the variable portions of 
the format.</FONT></SPAN> <BR><SPAN lang=zh-cn><FONT face=Verdana 
size=2>&nbsp;3. Invoking the format</FONT></SPAN> <BR><SPAN lang=zh-cn><FONT 
face=Verdana size=2>&nbsp; </FONT></SPAN><BR><SPAN lang=zh-cn><B><FONT 
face=Verdana size=2>&nbsp;Define the format</FONT></B></SPAN> <BR><SPAN 
lang=zh-cn><FONT face=Verdana size=2>&nbsp; the syntax of the format 
definition</FONT></SPAN> <BR><SPAN lang=zh-cn><FONT face=Verdana size=2>&nbsp; 
format formathandler=&nbsp;&nbsp; #format is the reserved word, it says it is a 
format definition. formathandler is the format name</FONT></SPAN></P>
<P><SPAN lang=zh-cn><FONT face=Verdana size=2>&nbsp; 
fieldline&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
#formatted pattern</FONT></SPAN> <BR><SPAN lang=zh-cn><FONT face=Verdana 
size=2>&nbsp; value_one,value_two,value_three&nbsp; #the value can be scalar or 
expressions/functions which return the scalar variable.But pls note that if the 
fieldholder is type of "Filled Fields", value can just be scalar instead of 
expression or function.</FONT></SPAN></P>
<P><SPAN lang=zh-cn><FONT face=Verdana size=2>&nbsp; fieldline</FONT></SPAN> 
<BR><SPAN lang=zh-cn><FONT face=Verdana size=2>&nbsp; 
value_one,value_two,value_three</FONT></SPAN> <BR><SPAN lang=zh-cn><FONT 
face=Verdana size=2>&nbsp; ...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #you 
can add another fieldline</FONT></SPAN> <BR><SPAN lang=zh-cn><FONT face=Verdana 
size=2>&nbsp; ...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #you can add another 
value mapped above fieldline</FONT></SPAN> <BR><SPAN lang=zh-cn><FONT 
face=Verdana size=2>&nbsp; 
.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # indicate the format 
definition is done</FONT></SPAN> <BR><SPAN lang=zh-cn><FONT face=Verdana 
size=2>&nbsp; </FONT></SPAN><BR><SPAN lang=zh-cn><FONT face=Verdana 
size=2>&nbsp;Example of the Format</FONT></SPAN> <BR><SPAN lang=zh-cn><FONT 
face=Verdana size=2>&nbsp; #the fixed text format example</FONT></SPAN> 
<BR><SPAN lang=zh-cn><FONT face=Verdana size=2>&nbsp; format 
FIXFORMAT=</FONT></SPAN> <BR><SPAN lang=zh-cn><FONT face=Verdana size=2>&nbsp; 
This is the string to be printed out</FONT></SPAN> <BR><SPAN lang=zh-cn><FONT 
face=Verdana size=2>&nbsp; 
.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<DIV style="CLEAR: both"></DIV></DIV>
<DIV class=post-footer>
<DIV class="post-footer-line post-footer-line-1"><SPAN 
class="post-author vcard">Posted by <SPAN class=fn>OO</SPAN> </SPAN><SPAN 
class=post-timestamp>at <A class=timestamp-link title="permanent link" 
href="http://zhengol.blogspot.com/2007/08/format-part-7-perl-study-notes.html" 
rel=bookmark><ABBR class=published title=2007-08-06T14:17:00+08:00>2:17 
PM</ABBR></A> </SPAN><SPAN class=post-comment-link><A class=comment-link 
onclick="" 
href="https://www.blogger.com/comment.g?blogID=4956808384161899942&amp;postID=2092225417191716346">0 
comments</A> </SPAN><SPAN class=post-icons><SPAN class=item-action><A 
title="Email Post" 
href="http://www.blogger.com/email-post.g?blogID=4956808384161899942&amp;postID=2092225417191716346"><IMG 
class=icon-action height=13 alt="" 
src="Zhengol Let's start here Perl_files/icon18_email.gif" width=18> 
</A></SPAN><SPAN class="item-control blog-admin pid-1453504744"><A 
title="Edit Post" 
href="http://www.blogger.com/post-edit.g?blogID=4956808384161899942&amp;postID=2092225417191716346"><IMG 
class=icon-action height=18 alt="" 
src="Zhengol Let's start here Perl_files/icon18_edit_allbkg.gif" width=18> 
</A></SPAN></SPAN></DIV>
<DIV class="post-footer-line post-footer-line-2"><SPAN class=post-labels>Labels: 
<A href="http://zhengol.blogspot.com/search/label/Perl" rel=tag>Perl</A>, <A 
href="http://zhengol.blogspot.com/search/label/Technical" rel=tag>Technical</A> 
</SPAN></DIV>
<DIV class="post-footer-line post-footer-line-3"><SPAN 
class=post-location></SPAN></DIV></DIV></DIV>
<H2 class=date-header>Wednesday, August 1, 2007</H2>
<DIV class="post hentry"><A name=7588153375139821331></A>
<H3 class="post-title entry-title"><A 
href="http://zhengol.blogspot.com/2007/08/function-part-6-perl-study-notes.html">Function 
(Part 6)-- Perl Study Notes</A> </H3>
<DIV class=post-header-line-1></DIV>
<DIV class="post-body entry-content"><!-- Converted from text/rtf format -->
<P align=center><B><FONT face=Verdana size=2>Function (Part 6)-- Perl Study 
Notes</FONT></B></P>
<P><B><FONT face=Verdana size=2>&nbsp;Arguments</FONT></B> <BR><FONT 
face=Verdana size=2>&nbsp; @_ is a array of all arguments passed to the 
subroutines</FONT> <BR><FONT face=Verdana size=2>&nbsp; $_[0],$_[1],$_[2]is the 
first/second/third/... arguments passed to the subroutines</FONT> <BR><FONT 
face=Verdana size=2>&nbsp; </FONT><BR><B><FONT face=Verdana size=2>&nbsp;Define 
local variable</FONT></B> <BR><FONT face=Verdana size=2>&nbsp; my 
($localScalar); #define one local scalar variable localScalar </FONT><BR><FONT 
face=Verdana size=2>&nbsp; my (@localArray);&nbsp; #define one local array 
variable localArray </FONT><BR><FONT face=Verdana size=2>&nbsp; my (%localHash); 
#define one local hash variable localHash </FONT><BR><FONT face=Verdana 
size=2>&nbsp; my ($localScalar,@localArray,%localHash); #define 3 local 
variables,localScalar, localArray and localHash</FONT> <BR><FONT face=Verdana 
size=2>&nbsp; my ($localScalar,@localArray) = ("Scalar",qw(list1 list2 list3)); 
# define the local variable and initial the variable</FONT></P>
<P><FONT face=Verdana size=2>&nbsp; </FONT><BR><FONT face=Verdana color=#ff0000 
size=2>&nbsp; Notes, operator local can be used to define the local variable. 
But we should prefer to use my over local because it is faster and 
safe</FONT></P>
<P><FONT face=Verdana color=#ff0000 size=2>&nbsp; local $_; # can not write like 
my $_; </FONT><BR><FONT face=Verdana color=#ff0000 size=2>&nbsp; local $1; # can 
write like my $1;</FONT> <BR><FONT face=Verdana color=#ff0000 size=2>&nbsp; 
local @ARGV; # can write like my @ARGV;</FONT> <BR><FONT face=Verdana 
size=2>&nbsp; </FONT><BR><B><FONT face=Verdana size=2>&nbsp; Perl 
pragma</FONT></B> <BR><FONT face=Verdana size=2>&nbsp;&nbsp; use strict; # write 
this in the top of the code file can keep from using the variable without 
declaration</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp; The advantages of 
forcing variable declarations are as below</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp; 1. Will run slightly faster.(variables created with my are 
accessed slightly faster than ordinary variables)</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp; 2. Can keep from variables typing error </FONT></P>
<DIV style="CLEAR: both"></DIV></DIV>
<DIV class=post-footer>
<DIV class="post-footer-line post-footer-line-1"><SPAN 
class="post-author vcard">Posted by <SPAN class=fn>OO</SPAN> </SPAN><SPAN 
class=post-timestamp>at <A class=timestamp-link title="permanent link" 
href="http://zhengol.blogspot.com/2007/08/function-part-6-perl-study-notes.html" 
rel=bookmark><ABBR class=published title=2007-08-01T17:16:00+08:00>5:16 
PM</ABBR></A> </SPAN><SPAN class=post-comment-link><A class=comment-link 
onclick="" 
href="https://www.blogger.com/comment.g?blogID=4956808384161899942&amp;postID=7588153375139821331">0 
comments</A> </SPAN><SPAN class=post-icons><SPAN class=item-action><A 
title="Email Post" 
href="http://www.blogger.com/email-post.g?blogID=4956808384161899942&amp;postID=7588153375139821331"><IMG 
class=icon-action height=13 alt="" 
src="Zhengol Let's start here Perl_files/icon18_email.gif" width=18> 
</A></SPAN><SPAN class="item-control blog-admin pid-1453504744"><A 
title="Edit Post" 
href="http://www.blogger.com/post-edit.g?blogID=4956808384161899942&amp;postID=7588153375139821331"><IMG 
class=icon-action height=18 alt="" 
src="Zhengol Let's start here Perl_files/icon18_edit_allbkg.gif" width=18> 
</A></SPAN></SPAN></DIV>
<DIV class="post-footer-line post-footer-line-2"><SPAN class=post-labels>Labels: 
<A href="http://zhengol.blogspot.com/search/label/Perl" rel=tag>Perl</A>, <A 
href="http://zhengol.blogspot.com/search/label/Technical" rel=tag>Technical</A> 
</SPAN></DIV>
<DIV class="post-footer-line post-footer-line-3"><SPAN 
class=post-location></SPAN></DIV></DIV></DIV>
<H2 class=date-header>Tuesday, July 31, 2007</H2>
<DIV class="post hentry"><A name=8473655939831645556></A>
<H3 class="post-title entry-title"><A 
href="http://zhengol.blogspot.com/2007/07/control-structures-part-3-perl-study_31.html">Control 
Structures (Part 3)-- Perl Study Notes</A> </H3>
<DIV class=post-header-line-1></DIV>
<DIV class="post-body entry-content"><!-- Converted from text/rtf format -->
<P align=center><B><FONT face=Verdana size=2>Control Structures (Part 3)-- Perl 
Study Notes</FONT></B></P>
<P><B><FONT face=Verdana size=2>&nbsp; Operator syntax</FONT></B> <BR><FONT 
face=Verdana size=2>&nbsp;&nbsp;&nbsp; if ($expression) </FONT><BR><FONT 
face=Verdana size=2>&nbsp;&nbsp;&nbsp; {</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; ....</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; }</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; elsif ($expression)</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; {</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; ...</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; }</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; else</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; {</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; ...</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; }</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; </FONT><BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; unless ($expression)</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; {</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; ...</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; }</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; </FONT><BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; while ($expression)</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; {</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; ...</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; }</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; </FONT><BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; until ($expression)</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; {</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; ...</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; }&nbsp; </FONT><BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; </FONT><BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; do</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; {</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; ...</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; }&nbsp; while ($expression)</FONT> <BR><FONT 
face=Verdana size=2>&nbsp;&nbsp;&nbsp; </FONT><BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; do</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; {</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; ...</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; }&nbsp; until ($expression)</FONT> <BR><FONT 
face=Verdana size=2>&nbsp;&nbsp;&nbsp; </FONT><BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; for($initial_exp1;$test_exp;$reinit_exp)</FONT> 
<BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp; {</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; ...</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; }&nbsp; </FONT><BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; </FONT><BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; foreach $value (@list)</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; {</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; ...</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; } # $value get each element in the @list</FONT> 
<BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp; </FONT><BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; foreach (@list)</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; {</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; ...</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; } #$_ get each element in the @list</FONT> <BR><FONT 
face=Verdana size=2>&nbsp; </FONT><BR><B><FONT face=Verdana size=2>&nbsp; How to 
populate true or false in Perl</FONT></B> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; a. convert the expression to string</FONT> <BR><FONT 
face=Verdana size=2>&nbsp;&nbsp;&nbsp; b. if the string is empty or "0", it 
returns false else true</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp; 
"0" #false</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp; 0 
#false</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp; "00" #true</FONT> 
<BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp; undef #false</FONT> <BR><FONT 
face=Verdana size=2>&nbsp;&nbsp;&nbsp; 1 #true</FONT> <BR><FONT face=Verdana 
size=2>&nbsp; </FONT><BR><B><FONT face=Verdana size=2>&nbsp; last: to exit from 
the loop</FONT></B> <BR><FONT face=Verdana size=2>&nbsp; while (something) 
{</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
something;</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
something;</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
something;</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
if (somecondition) {</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; somethingorother;</FONT> 
<BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
somethingorother;</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; last; # break out of the while 
loop</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</FONT> <BR><FONT 
face=Verdana size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; morethings;</FONT> <BR><FONT 
face=Verdana size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; morethings;</FONT> <BR><FONT 
face=Verdana size=2>&nbsp; }</FONT> <BR><FONT face=Verdana size=2>&nbsp; # last 
comes here&nbsp; </FONT><BR><FONT face=Verdana size=2>&nbsp; </FONT><BR><B><FONT 
face=Verdana size=2>&nbsp; next: to exit current loop and continue the next 
round loop</FONT></B> <BR><FONT face=Verdana size=2>&nbsp; while (something) 
{</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
something;</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
something;</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
something;</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
if (somecondition) {</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; somethingorother;</FONT> 
<BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
somethingorother;</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; next; # break out of the while 
loop</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</FONT> <BR><FONT 
face=Verdana size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; morethings;</FONT> <BR><FONT 
face=Verdana size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; morethings;</FONT> <BR><FONT 
face=Verdana size=2>&nbsp;&nbsp;&nbsp;&nbsp; # next comes here </FONT><BR><FONT 
face=Verdana size=2>&nbsp; }</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp; 
</FONT><BR><B><FONT face=Verdana size=2>&nbsp;&nbsp; redo: to jump to the 
beginning of the current block(</FONT><FONT face=Verdana color=#ff0000 
size=2>without reevaluating the control expression</FONT><FONT face=Verdana 
size=2>)</FONT></B> <BR><FONT face=Verdana size=2>&nbsp;&nbsp; while 
(somecondition) {</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # redo comes here without evaluate the 
somecondition</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; something;</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; something;</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; something;</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (somecondition) {</FONT> <BR><FONT 
face=Verdana size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
somethingorother;</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; somethingorother;</FONT> 
<BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; redo; # 
break out of the while loop</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</FONT> <BR><FONT 
face=Verdana size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; morethings;</FONT> <BR><FONT 
face=Verdana size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; morethings;</FONT> </P>
<P><FONT face=Verdana size=2>&nbsp;&nbsp; }&nbsp;&nbsp;&nbsp; </FONT><BR><FONT 
face=Verdana color=#ff0000 size=2>&nbsp;&nbsp; The follow is another loop 
structure without any while/for/foreach/until statement</FONT> <BR><FONT 
face=Verdana color=#ff0000 size=2>&nbsp;&nbsp; {</FONT> <BR><FONT face=Verdana 
color=#ff0000 size=2>&nbsp;&nbsp;&nbsp;&nbsp; startstuff;</FONT> <BR><FONT 
face=Verdana color=#ff0000 size=2>&nbsp;&nbsp;&nbsp;&nbsp; startstuff;</FONT> 
<BR><FONT face=Verdana color=#ff0000 size=2>&nbsp;&nbsp;&nbsp;&nbsp; 
startstuff;</FONT> <BR><FONT face=Verdana color=#ff0000 
size=2>&nbsp;&nbsp;&nbsp;&nbsp; if (somecondition) {</FONT> <BR><FONT 
face=Verdana color=#ff0000 size=2>&nbsp;&nbsp;&nbsp;&nbsp; last;</FONT> 
<BR><FONT face=Verdana color=#ff0000 size=2>&nbsp;&nbsp;&nbsp;&nbsp; }</FONT> 
<BR><FONT face=Verdana color=#ff0000 size=2>&nbsp;&nbsp;&nbsp;&nbsp; 
laterstuff;</FONT> <BR><FONT face=Verdana color=#ff0000 
size=2>&nbsp;&nbsp;&nbsp;&nbsp; laterstuff;</FONT> <BR><FONT face=Verdana 
color=#ff0000 size=2>&nbsp;&nbsp;&nbsp;&nbsp; laterstuff;</FONT> <BR><FONT 
face=Verdana color=#ff0000 size=2>&nbsp;&nbsp;&nbsp;&nbsp; redo;</FONT> 
<BR><FONT face=Verdana color=#ff0000 size=2>&nbsp;&nbsp;&nbsp; } # this block 
will be looped until somecondition is true</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; </FONT><BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; </FONT><FONT face=Verdana color=#ff0000 size=2>Pls 
note that last/next/redo can not be used in the do{}while/until statement</FONT> 
<BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp; </FONT><BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp;</FONT><B> <FONT face=Verdana size=2>Expression 
Modifiers</FONT></B> <BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp; 
some_expression if control_expression</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; this is equivalent to </FONT><BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; if(control_expression)</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; {</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; some_expression</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; }</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; </FONT><BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; exp2 unless exp1; # like : unless(exp1){exp2;}</FONT> 
<BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp; exp2 while exp1; #like: 
while(exp1){exp2;}</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp; exp2 
until exp1; #like: until(exp1){exp2;}</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; </FONT><BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp;</FONT><B> <FONT face=Verdana size=2>&amp;&amp; and || 
Control Structures</FONT></B> <BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp; 
this &amp;&amp; that; # equivalent to that if this</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; this || that; # equivalent to that unless this</FONT> 
</P>
<DIV style="CLEAR: both"></DIV></DIV>
<DIV class=post-footer>
<DIV class="post-footer-line post-footer-line-1"><SPAN 
class="post-author vcard">Posted by <SPAN class=fn>OO</SPAN> </SPAN><SPAN 
class=post-timestamp>at <A class=timestamp-link title="permanent link" 
href="http://zhengol.blogspot.com/2007/07/control-structures-part-3-perl-study_31.html" 
rel=bookmark><ABBR class=published title=2007-07-31T20:38:00+08:00>8:38 
PM</ABBR></A> </SPAN><SPAN class=post-comment-link><A class=comment-link 
onclick="" 
href="https://www.blogger.com/comment.g?blogID=4956808384161899942&amp;postID=8473655939831645556">0 
comments</A> </SPAN><SPAN class=post-icons><SPAN class=item-action><A 
title="Email Post" 
href="http://www.blogger.com/email-post.g?blogID=4956808384161899942&amp;postID=8473655939831645556"><IMG 
class=icon-action height=13 alt="" 
src="Zhengol Let's start here Perl_files/icon18_email.gif" width=18> 
</A></SPAN><SPAN class="item-control blog-admin pid-1453504744"><A 
title="Edit Post" 
href="http://www.blogger.com/post-edit.g?blogID=4956808384161899942&amp;postID=8473655939831645556"><IMG 
class=icon-action height=18 alt="" 
src="Zhengol Let's start here Perl_files/icon18_edit_allbkg.gif" width=18> 
</A></SPAN></SPAN></DIV>
<DIV class="post-footer-line post-footer-line-2"><SPAN class=post-labels>Labels: 
<A href="http://zhengol.blogspot.com/search/label/Perl" rel=tag>Perl</A>, <A 
href="http://zhengol.blogspot.com/search/label/Technical" rel=tag>Technical</A> 
</SPAN></DIV>
<DIV class="post-footer-line post-footer-line-3"><SPAN 
class=post-location></SPAN></DIV></DIV></DIV>
<DIV class="post hentry"><A name=872492815163114574></A>
<H3 class="post-title entry-title"><A 
href="http://zhengol.blogspot.com/2007/07/regular-expression-part-5-perl-study_31.html">Regular 
Expression (Part 5)-- Perl Study Notes</A> </H3>
<DIV class=post-header-line-1></DIV>
<DIV class="post-body entry-content">
<P align=center><B><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">Regular 
Expression (Part 5)-- Perl Study Notes</SPAN></B></P>
<P><B><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">Single-Character 
Patterns</SPAN></B><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/a./; 
#. matches any characters except \n. /a./ matches any two-letter sequence that 
starts with a but except a\n</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/a+/; #+ matches one or more of the 
immediately previous character, such as lookaab,aaabc but no 
lookup</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/a*/; #* 
matches zero or more of the immediately previous character, such abs, 
asdic</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/a?/; #? 
matches zero or one of the immediately previous character, such as 
abc,aabc</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/[abcde]/; 
#match a string containing any one of the letters</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/[^0-9]/; #match any single 
non-digit</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/[^aeiouAEIOU]/; #match any single 
non-vowel</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/[^/^]/; 
#match any character except an up-arrow</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/[\da-fA-F]/; #match one hex 
digit</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/\d/ # 
equivalent to /[0-9]/</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/\D/ # equivalent to 
/[^0-9]/</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/\w/ # 
equivalent to /[0-9a-zA-Z]/</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/\W/ # equivalent to 
/[^0-9a-zA-Z]/</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/\s/ 
#equivalent to /[\r\t\n\f]</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/\S/ $equivalent to 
/[^\r\t\n\f]</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"></SPAN><BR><B><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">Group Patterns</SPAN></B><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/x+box?/; # + means one or more of 
the immediately previous character and the ? means zero or one of the 
immediately previous character.</SPAN></P>
<P><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"># the above pattern match 
the string "xbox","xxbo","xxbox"</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/x{1,5}/; # match any string with 
one </SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"></SPAN><BR><B><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">Parentheses as 
memory</SPAN></B><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/fred(.)barney\1/; # \1 means the 
first parenthesized part of the regular expression.</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"># if matchs fredybarneyy but not 
fredybarneyx</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/a(.)b(.)c\2d\1/; # matchs azbycydz 
but not abbccd</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/a(.*)b\1c/; #match aFREDbFredC not 
axxbxxxc</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"></SPAN><BR><B><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">Alternation 
Patterns</SPAN></B><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/songbule/; #matchs either song or 
blue</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"></SPAN><BR><B><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">Anchoring 
Patterns</SPAN></B><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/fred\b/; # matches fred, but not 
frederick</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/\bmo/; 
#matches moe but not emo</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/\bFred\b/; #matchs Fred but not 
Frederick or alFred</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/\b\+\b/; #matchs "x+y" but not 
"++" or " + "</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/abc\bdef/; #never 
matchs</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/\bFred\B/; 
#matchs "Frederick" but not "Fred Flintstone"</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/^Fred/; #matchs Fredabc but not 
aFred</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/Fred$/; 
#matchs abcFred but not Freda</SPAN> </P>
<P><B><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">Other 
operators</SPAN></B><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">~/^he/; ~ to select a different 
target, for example</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">$a="hello world";</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">$a=~/^he/; #true, but $a still 
="hello world"</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">$a=~/(.)\1/; #true, but $a still 
="hello world"</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">if 
($a=~/(.)\1/) #true</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">{</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"># put statement 
here</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">}</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"></SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/abc/i; # i to ignore the case. it 
matches abs, Abs, ABC </SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"></SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">/^\/usr\/etc/; # Using standard 
slash delimiter. It matches the string containing /urs/etc</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">m@^/usr/etc@; #using @ for a 
delimiter. It also matches the string /usr/etc</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">m#^/usr/etc#; #using # for a 
delimiter. It also matches the string /usr/etc</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">pls note that the delimiter must be 
any nonalphanumeric character</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"></SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">$what = "[box]"; #\Q will ignore 
any specify character in the regular expression</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">foreach (qw(in[box] out[box] 
white[sox])) {</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">if 
(/\Q$what\E/) {</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">print "$_ 
matched!\n";</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">}</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">}</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"></SPAN><BR><B><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">Ready-Only 
Variable</SPAN></B><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"># 
variable $1,$2,$3 and so on are set to the same values as \1,\2,\3, and so 
on</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">$_="this is a 
test";</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">if 
(/(\w+)\W+\(\w+)/)</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">{</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">print "$1\n"; # $1 = 
this</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">print "$2\n"; 
# $2 =is</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">}</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"></SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">#$&amp; is the part of the string 
that matched the regular expression</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">#$` is the part of the string 
before the part that matched</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">#$' is the part of the string after 
the part that matched</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"></SPAN><BR><B><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">Substitutions</SPAN></B><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">the syntax of the substitutions is 
</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">s/old-regex/new-string/</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">If you want to the replacement to 
operate on all possible matches instead of just the first match, append a g to 
the substitution</SPAN></P>
<P><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">$_="foot fool 
buffoon";</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">s/oo/bar/; # $_=fbart fool 
buffoon;</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">$_="foot 
fool buffoon";</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">s/oo/bar/g; # $_=fbart fbarl 
buffoon;</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">$_ = "this 
is a test";</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">s/(\w+)/&lt;$1&gt;/g; # $_ is now 
"&lt;this&gt; &lt;is&gt; &lt;a&gt; &lt;test&gt;"</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"></SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">$d{"abc"}=123;</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">$d{"def"}=456;</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">$d{"ghk"}=789;</SPAN> </P>
<P><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">foreach (keys 
%d)</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">{</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">print "$d{$_}\n";</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">$d{$_}=~s/^/x /; #prepend "x " to 
hash element</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">print 
"$d{$_}\n";</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">}</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">#we can see that the original 
string is changed after using regular expression substitutions.</SPAN> </P>
<P><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: verdana">#example for \G usage 
</SPAN></P>
<P><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">$what = "[box]"; 
</SPAN></P>
<P><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">foreach (qw(in[box] 
out[box] white[sox])) </SPAN></P>
<P><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">{ if (/\Q$what\E/) { # 
equivalent to match the regular expression of /\[box\]/ </SPAN></P>
<P><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">print "$_ matched!\n"; 
</SPAN></P>
<P><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">}</SPAN></P>
<DIV style="CLEAR: both"></DIV></DIV>
<DIV class=post-footer>
<DIV class="post-footer-line post-footer-line-1"><SPAN 
class="post-author vcard">Posted by <SPAN class=fn>OO</SPAN> </SPAN><SPAN 
class=post-timestamp>at <A class=timestamp-link title="permanent link" 
href="http://zhengol.blogspot.com/2007/07/regular-expression-part-5-perl-study_31.html" 
rel=bookmark><ABBR class=published title=2007-07-31T16:31:00+08:00>4:31 
PM</ABBR></A> </SPAN><SPAN class=post-comment-link><A class=comment-link 
onclick="" 
href="https://www.blogger.com/comment.g?blogID=4956808384161899942&amp;postID=872492815163114574">0 
comments</A> </SPAN><SPAN class=post-icons><SPAN class=item-action><A 
title="Email Post" 
href="http://www.blogger.com/email-post.g?blogID=4956808384161899942&amp;postID=872492815163114574"><IMG 
class=icon-action height=13 alt="" 
src="Zhengol Let's start here Perl_files/icon18_email.gif" width=18> 
</A></SPAN><SPAN class="item-control blog-admin pid-1453504744"><A 
title="Edit Post" 
href="http://www.blogger.com/post-edit.g?blogID=4956808384161899942&amp;postID=872492815163114574"><IMG 
class=icon-action height=18 alt="" 
src="Zhengol Let's start here Perl_files/icon18_edit_allbkg.gif" width=18> 
</A></SPAN></SPAN></DIV>
<DIV class="post-footer-line post-footer-line-2"><SPAN class=post-labels>Labels: 
<A href="http://zhengol.blogspot.com/search/label/Perl" rel=tag>Perl</A>, <A 
href="http://zhengol.blogspot.com/search/label/Technical" rel=tag>Technical</A> 
</SPAN></DIV>
<DIV class="post-footer-line post-footer-line-3"><SPAN 
class=post-location></SPAN></DIV></DIV></DIV>
<H2 class=date-header>Monday, July 30, 2007</H2>
<DIV class="post hentry"><A name=2516106465110216314></A>
<H3 class="post-title entry-title"><A 
href="http://zhengol.blogspot.com/2007/07/basic-io-part-4-perl-study-notes.html">Basic 
I/O (Part 4)-- Perl Study Notes</A> </H3>
<DIV class=post-header-line-1></DIV>
<DIV class="post-body entry-content">
<P align=center><B><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">Basic I/O 
(Part 4)-- Perl Study Notes</SPAN></B></P>
<P><B><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">&lt;STDIN&gt;</SPAN></B><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">while (defined($line = 
&lt;STDIN&gt;)) </SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">{</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">... # process $line 
here</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">}</SPAN> </P>
<P><B><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">Diamond 
Operator</SPAN></B><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">a. The 
diamond operator gets its data form file or files specified on the command line 
that invoked the Perl program </SPAN></P>
<P><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">for example, we have a pl 
file readfile.pl as below</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">#!/usr/bin/perl</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">while (&lt;&gt;)</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">{</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">print $_;</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">}</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">run the perl like 
this</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">readfile.pl 
file1 file2 file3</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">the diamond operator reads each 
line of file 1 and file2 and file3</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">b. In a scalar context, it returns 
a single line. In a list/array context, it returns all lines.</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">c. The daimond operator gets the 
files form the @ARGV. @ARGV is initiated by the parameters of the command 
line.The parameter can be assigned in the program itsefl. Here is the 
example,</SPAN></P>
<P><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">#!/usr/bin/perl</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">@ARGV=qw(file1,file2,file3)</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">while (&lt;&gt;)</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">{</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">print $_;</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">} </SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"></SPAN><BR><B><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">&lt;STDOUT&gt;</SPAN></B><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">print (2+3),"hello"; # wrong! 
prints 5, ignores "hello"</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">print ((2+3),"hello"); # right, 
prints 5hello</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">print 
2+3,"hello"; # also right, prints 5hello</SPAN> </P>
<P></P>
<P><BR><STRONG><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">Filehanlers 
</SPAN><BR></STRONG><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">open 
(FILEHANDLE,$filewanttoopen); #open external file or device $filewanttoopen, 
return true if success and false if fail<BR>open FILEHANDLE, 
"&gt;$filewanttowrite); # open the file $filewanttowrite to write, return true 
if success and false if fail<BR>open FILEHANDLE, "&gt;&gt;$filewanttoappend); # 
open the file $filewanttoappend for appending, return true if success and false 
if fail<BR>close(FILEHANDLE); #close the FILEHANDLER<BR><BR><SPAN 
style="COLOR: #ff0000">Pls note reopen the FILEHANDLE can close it 
automatically.</SPAN></SPAN> </P>
<P><BR><SPAN 
style="FONT-SIZE: 85%; COLOR: #000000; FONT-FAMILY: verdana"><STRONG>die and 
warn<BR></STRONG>die("This is the error message!!!"); # print out "This is the 
error message!!!" followed the program name and line number and exit the 
perl.<BR>die("This is the error message!!!\n"); # just print out "This is the 
error message!!!" followed the program name and line number and exit the 
perl.<BR>warn("This is the error message!!!"); # just print out the string "This 
is the error message!!!" without terminate the 
perl<BR><BR>#!c:\perl\bin\perl.exe<BR># here is the example to copy file $a to 
$b<BR>open(IN,$a) die "cannot open $a for reading: $!";<BR>open(OUT,"&gt;$b") 
die "cannot create $b: $!";<BR>while (<IN>) { # read a line from file $a into 
$_<BR>print OUT $_; # print that line to file $b<BR>}<BR>close(IN) die "can't 
close $a: $!";<BR>close(OUT) die "can't close $b: $!";<BR></SPAN></P>
<P><SPAN 
style="FONT-SIZE: 85%; COLOR: #000000; FONT-FAMILY: verdana"></P></SPAN><BR><SPAN 
style="FONT-SIZE: 85%"><SPAN style="FONT-FAMILY: verdana"><STRONG><SPAN 
style="COLOR: #000000">File tests operator (Most 
used)</SPAN></STRONG><BR></SPAN></SPAN><SPAN 
style="FONT-SIZE: 85%; COLOR: #000000; FONT-FAMILY: verdana">-e $filename; 
return true if $filename is existing while false if not.<BR>-r $filename; return 
true if $filename is readable while false if not.<BR>-w $filename; return true 
if $filename is writable while false if not.<BR>-x $filename; return true if 
$filename is executable while false if not.<BR>-s $filename; return size of the 
$filename if $filename is existing.<BR>-M $filename; return days since the 
$filename is last modified.<BR>-A $filename; return days since the $filename is 
last accessed.<BR>-C $filename; return days since the inode of the $filename 
changes.</SPAN> 
<DIV style="CLEAR: both"></DIV></DIV>
<DIV class=post-footer>
<DIV class="post-footer-line post-footer-line-1"><SPAN 
class="post-author vcard">Posted by <SPAN class=fn>OO</SPAN> </SPAN><SPAN 
class=post-timestamp>at <A class=timestamp-link title="permanent link" 
href="http://zhengol.blogspot.com/2007/07/basic-io-part-4-perl-study-notes.html" 
rel=bookmark><ABBR class=published title=2007-07-30T16:08:00+08:00>4:08 
PM</ABBR></A> </SPAN><SPAN class=post-comment-link><A class=comment-link 
onclick="" 
href="https://www.blogger.com/comment.g?blogID=4956808384161899942&amp;postID=2516106465110216314">0 
comments</A> </SPAN><SPAN class=post-icons><SPAN class=item-action><A 
title="Email Post" 
href="http://www.blogger.com/email-post.g?blogID=4956808384161899942&amp;postID=2516106465110216314"><IMG 
class=icon-action height=13 alt="" 
src="Zhengol Let's start here Perl_files/icon18_email.gif" width=18> 
</A></SPAN><SPAN class="item-control blog-admin pid-1453504744"><A 
title="Edit Post" 
href="http://www.blogger.com/post-edit.g?blogID=4956808384161899942&amp;postID=2516106465110216314"><IMG 
class=icon-action height=18 alt="" 
src="Zhengol Let's start here Perl_files/icon18_edit_allbkg.gif" width=18> 
</A></SPAN></SPAN></DIV>
<DIV class="post-footer-line post-footer-line-2"><SPAN class=post-labels>Labels: 
<A href="http://zhengol.blogspot.com/search/label/Perl" rel=tag>Perl</A>, <A 
href="http://zhengol.blogspot.com/search/label/Technical" rel=tag>Technical</A> 
</SPAN></DIV>
<DIV class="post-footer-line post-footer-line-3"><SPAN 
class=post-location></SPAN></DIV></DIV></DIV>
<H2 class=date-header>Thursday, July 26, 2007</H2>
<DIV class="post hentry"><A name=7862243133872277163></A>
<H3 class="post-title entry-title"><A 
href="http://zhengol.blogspot.com/2007/07/data-type-part-2-arrayhash-variable.html">Data 
Type (Part 2 - Array/Hash Variable)-- Perl Study Notes </A></H3>
<DIV class=post-header-line-1></DIV>
<DIV class="post-body entry-content"><!-- Converted from text/rtf format --><BR>
<P align=center><B><FONT face=Verdana size=2>Data Type (Part 2 - Array/Hash 
Variable)-- Perl Study Notes&nbsp;</FONT></B> </P>
<P><B><FONT face=Verdana size=2>Array Variable</FONT></B> <BR><FONT face=Verdana 
size=2>&nbsp;Array operator: ..</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; (1 .. 5) # same as (1,2,3,4,5)</FONT> <BR><FONT 
face=Verdana size=2>&nbsp;&nbsp;&nbsp; (1.1 ..5.1) #same as 
(1.1,2.1,3.1,4.1,5.1)</FONT> <BR><FONT face=Verdana size=2>&nbsp;&nbsp;&nbsp; 
(3.2 .. 5.1) #same as (3.2,4.2)</FONT> <BR><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp; Notes: .. operator create a list of values starting at 
the left scalar value up through the right scalar value incrementing by one each 
time</FONT></P>
<P><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Having the 
right scalar less than the left scalar results in an empty list</FONT> <BR><FONT 
face=Verdana size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
If the final value is not a whole number of steps above the initial value, the 
list stops just before the next value would have been outside the range,just as 
the above sample</FONT></P>
<P><FONT face=Verdana 
size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Only 
effective to the number lists</FONT> <BR><FONT face=Verdana size=2>&nbsp;</FONT> 
<BR><FONT face=Verdana size=2>&nbsp;Array example,</FONT> <BR><FONT face=Verdana 
size=2>&nbsp; @fred=qw(4 5 6); </FONT><BR><FONT face=Verdana size=2>&nbsp; 
@fred=(4,5,6);</FONT> <BR><FONT face=Verdana size=2>&nbsp; $a=@fred; # $a=3, If 
one array is assigned to a scalar variable, the number assigned is the length of 
the array.</FONT> <BR><FONT face=Verdana size=2>&nbsp; ($a)=@fred; $a=4, only 
assign the first value to the $a.</FONT> <BR><FONT face=Verdana size=2>&nbsp; 
@fred=("fred", "wilma", "pebbles", "dino");</FONT> <BR><FONT face=Verdana 
size=2>&nbsp; $fred[-1]; # return "dino"</FONT> <BR><FONT face=Verdana 
size=2>&nbsp; $#fred;&nbsp; #return 3. $#array_name returns the last index of 
the array</FONT> <BR><FONT face=Verdana size=2>&nbsp; </FONT><BR><B><FONT 
face=Verdana size=2>Hash Variable</FONT></B> <BR><FONT face=Verdana 
size=2>&nbsp;Hash example,</FONT> <BR><FONT face=Verdana size=2>&nbsp; 
$fred{"aaa"} = "bbb"; # creates key "aaa", value "bbb"</FONT> <BR><FONT 
face=Verdana size=2>&nbsp; $fred{234.5} = 456.7; # creates key "234.5", value 
456.7 </FONT><BR><FONT face=Verdana size=2>&nbsp; if %hash {...} # in the scalar 
context, merly using %hash will reveal whether the hash is empty or not</FONT> 
</P>
<P><FONT face=Verdana size=2>&nbsp;Hash Slices</FONT> <BR><FONT face=Verdana 
size=2>&nbsp; @score{"fred","barney","dino"} = (205,195,30);</FONT> <BR><FONT 
face=Verdana size=2>&nbsp; @players = qw(fred barney dino);</FONT> <BR><FONT 
face=Verdana size=2>&nbsp;&nbsp; print "scores are: @score{@players}\n"; # 
scores are: 205 195 30</FONT> </P>
<DIV style="CLEAR: both"></DIV></DIV>
<DIV class=post-footer>
<DIV class="post-footer-line post-footer-line-1"><SPAN 
class="post-author vcard">Posted by <SPAN class=fn>OO</SPAN> </SPAN><SPAN 
class=post-timestamp>at <A class=timestamp-link title="permanent link" 
href="http://zhengol.blogspot.com/2007/07/data-type-part-2-arrayhash-variable.html" 
rel=bookmark><ABBR class=published title=2007-07-26T17:09:00+08:00>5:09 
PM</ABBR></A> </SPAN><SPAN class=post-comment-link><A class=comment-link 
onclick="" 
href="https://www.blogger.com/comment.g?blogID=4956808384161899942&amp;postID=7862243133872277163">0 
comments</A> </SPAN><SPAN class=post-icons><SPAN class=item-action><A 
title="Email Post" 
href="http://www.blogger.com/email-post.g?blogID=4956808384161899942&amp;postID=7862243133872277163"><IMG 
class=icon-action height=13 alt="" 
src="Zhengol Let's start here Perl_files/icon18_email.gif" width=18> 
</A></SPAN><SPAN class="item-control blog-admin pid-1453504744"><A 
title="Edit Post" 
href="http://www.blogger.com/post-edit.g?blogID=4956808384161899942&amp;postID=7862243133872277163"><IMG 
class=icon-action height=18 alt="" 
src="Zhengol Let's start here Perl_files/icon18_edit_allbkg.gif" width=18> 
</A></SPAN></SPAN></DIV>
<DIV class="post-footer-line post-footer-line-2"><SPAN class=post-labels>Labels: 
<A href="http://zhengol.blogspot.com/search/label/Perl" rel=tag>Perl</A>, <A 
href="http://zhengol.blogspot.com/search/label/Technical" rel=tag>Technical</A> 
</SPAN></DIV>
<DIV class="post-footer-line post-footer-line-3"><SPAN 
class=post-location></SPAN></DIV></DIV></DIV>
<H2 class=date-header>Wednesday, July 25, 2007</H2>
<DIV class="post hentry"><A name=1368613869090505487></A>
<H3 class="post-title entry-title"><A 
href="http://zhengol.blogspot.com/2007/07/data-type-part-one-scalar-variable-perl.html">Data 
Type (Part 1 - Scalar Variable) -- Perl Study Notes</A> </H3>
<DIV class=post-header-line-1></DIV>
<DIV class="post-body entry-content">
<P align=center><B><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">Data Type 
(Part 1- Scalar Variable)</SPAN></B></P>
<P><B><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">Scalar 
Variable</SPAN></B><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"></SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">number: including the integer and 
float number. all number will be converted into double in internal 
perl</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">1000</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">10.24</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">1.25e45</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">012 #Octal number</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">0x12 #Hex number</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"></SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">number operator: +-*/% 
</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"></SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">number logical comparion: &gt; &lt; 
== &gt;= &lt;= != </SPAN></P>
<P><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">string: single-quoted 
strings</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">'hello' 
#hello</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">'don\'t' 
#don't</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">'silly\\me' 
#silly\me </SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">'hello\n' #hello\n</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">'hello $name' # hello 
$name</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">double-quoted 
strings</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">"hello 
world\n" # hello world and new line</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">"coke\tsprite" #coke+a 
tab+sprite</SPAN><BR><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">"my name 
is $name" #my name is zhengol, if $name="zhengol"</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"></SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">string operator:. x</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">"abc"."def" #abcdef</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">"abc"x4 #abcabcabc</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">(3+2)x5 #55555</SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana"></SPAN><BR><SPAN 
style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">string logical comparaion: eq lt gt 
ne le ge</SPAN> </P>
<P><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">Notes: the numeric and 
string comparions are roughly oppposite of what they are for the Unix which uses 
-eq for string comparison and == for numeric comparison</SPAN></P>
<P><SPAN style="FONT-SIZE: 85%; FONT-FAMILY: Verdana">(To be 
continued)</SPAN></P>
<DIV style="CLEAR: both"></DIV></DIV>
<DIV class=post-footer>
<DIV class="post-footer-line post-footer-line-1"><SPAN 
class="post-author vcard">Posted by <SPAN class=fn>OO</SPAN> </SPAN><SPAN 
class=post-timestamp>at <A class=timestamp-link title="permanent link" 
href="http://zhengol.blogspot.com/2007/07/data-type-part-one-scalar-variable-perl.html" 
rel=bookmark><ABBR class=published title=2007-07-25T20:37:00+08:00>8:37 
PM</ABBR></A> </SPAN><SPAN class=post-comment-link><A class=comment-link 
onclick="" 
href="https://www.blogger.com/comment.g?blogID=4956808384161899942&amp;postID=1368613869090505487">0 
comments</A> </SPAN><SPAN class=post-icons><SPAN class=item-action><A 
title="Email Post" 
href="http://www.blogger.com/email-post.g?blogID=4956808384161899942&amp;postID=1368613869090505487"><IMG 
class=icon-action height=13 alt="" 
src="Zhengol Let's start here Perl_files/icon18_email.gif" width=18> 
</A></SPAN><SPAN class="item-control blog-admin pid-1453504744"><A 
title="Edit Post" 
href="http://www.blogger.com/post-edit.g?blogID=4956808384161899942&amp;postID=1368613869090505487"><IMG 
class=icon-action height=18 alt="" 
src="Zhengol Let's start here Perl_files/icon18_edit_allbkg.gif" width=18> 
</A></SPAN></SPAN></DIV>
<DIV class="post-footer-line post-footer-line-2"><SPAN class=post-labels>Labels: 
<A href="http://zhengol.blogspot.com/search/label/Perl" rel=tag>Perl</A>, <A 
href="http://zhengol.blogspot.com/search/label/Technical" rel=tag>Technical</A> 
</SPAN></DIV>
<DIV class="post-footer-line post-footer-line-3"><SPAN 
class=post-location></SPAN></DIV></DIV></DIV><!-- google_ad_section_end --></DIV>
<DIV class=blog-pager id=blog-pager><SPAN id=blog-pager-newer-link><A 
class=blog-pager-newer-link id=Blog1_blog-pager-newer-link title="Newer Posts" 
href="http://zhengol.blogspot.com/search/label/Perl?max-results=20">Newer 
Posts</A> </SPAN><SPAN id=blog-pager-older-link><A class=blog-pager-older-link 
id=Blog1_blog-pager-older-link title="Older Posts" 
href="http://zhengol.blogspot.com/search/label/Perl?updated-max=2007-07-25T20%3A37%3A00%2B08%3A00&amp;max-results=20">Older 
Posts</A> </SPAN><A class=home-link href="http://zhengol.blogspot.com/">Home</A> 
</DIV>
<DIV class=clear></DIV>
<DIV class=blog-feeds>
<DIV class=feed-links>Subscribe to: <A class=feed-link 
href="http://zhengol.blogspot.com/feeds/posts/default" target=_blank 
type=application/atom+xml>Posts (Atom)</A> </DIV></DIV></DIV></DIV></DIV></DIV>
<DIV id=sidebar-wrap>
<DIV id=sidebartop-wrap>
<DIV id=sidebartop-wrap2>
<DIV class="sidebar section" id=sidebartop>
<DIV class="widget Slideshow" id=Slideshow1>
<H2 class=title>Slideshow</H2>
<DIV class=widget-content>
<DIV class=slideshow-container id=Slideshow1_slideshow><SPAN 
class=slideshow-status>Loading...</SPAN> </DIV></DIV>
<DIV class=clear></DIV><SPAN class=widget-item-control><SPAN 
class="item-control blog-admin"><A class=quickedit title=Edit 
onclick='return _WidgetManager._PopupConfig(document.getElementById("Slideshow1"));' 
href="http://www.blogger.com/rearrange?blogID=4956808384161899942&amp;widgetType=Slideshow&amp;widgetId=Slideshow1&amp;action=editWidget" 
target=configSlideshow1><IMG height=18 alt="" 
src="Zhengol Let's start here Perl_files/icon18_wrench_allbkg.png" width=18> 
</A></SPAN></SPAN>
<DIV class=clear></DIV></DIV></DIV></DIV></DIV>
<DIV id=sidebarbottom-wrap1>
<DIV id=sidebarbottom-wrap2>
<DIV class="sidebar section" id=sidebar>
<DIV class="widget TextList" id=TextList1>
<H2>Xiaoxiao's photo</H2>
<DIV class=widget-content>
<UL>
  <LI><A href="http://picasaweb.google.com/zheng.oliver" 
  target=_new>http://picasaweb.google.com/zheng.oliver</A> </LI></UL>
<DIV class=clear></DIV><SPAN class=widget-item-control><SPAN 
class="item-control blog-admin"><A class=quickedit title=Edit 
onclick='return _WidgetManager._PopupConfig(document.getElementById("TextList1"));' 
href="http://www.blogger.com/rearrange?blogID=4956808384161899942&amp;widgetType=TextList&amp;widgetId=TextList1&amp;action=editWidget" 
target=configTextList1><IMG height=18 alt="" 
src="Zhengol Let's start here Perl_files/icon18_wrench_allbkg.png" width=18> 
</A></SPAN></SPAN>
<DIV class=clear></DIV></DIV></DIV>
<DIV class="widget BlogArchive" id=BlogArchive1>
<H2>Blog Archive</H2>
<DIV class=widget-content>
<DIV id=ArchiveList>
<DIV id=BlogArchive1_ArchiveList>
<UL>
  <LI class=archivedate><A 
  href="http://zhengol.blogspot.com/2009_02_01_archive.html">February</A> (2) 
  <LI class=archivedate><A 
  href="http://zhengol.blogspot.com/2008_12_01_archive.html">December</A> (12) 
  <LI class=archivedate><A 
  href="http://zhengol.blogspot.com/2008_11_01_archive.html">November</A> (6) 
  <LI class=archivedate><A 
  href="http://zhengol.blogspot.com/2008_10_01_archive.html">October</A> (2) 
  <LI class=archivedate><A 
  href="http://zhengol.blogspot.com/2008_09_01_archive.html">September</A> (1) 
  <LI class=archivedate><A 
  href="http://zhengol.blogspot.com/2008_08_01_archive.html">August</A> (1) 
  <LI class=archivedate><A 
  href="http://zhengol.blogspot.com/2008_07_01_archive.html">July</A> (2) 
  <LI class=archivedate><A 
  href="http://zhengol.blogspot.com/2008_06_01_archive.html">June</A> (2) 
  <LI class=archivedate><A 
  href="http://zhengol.blogspot.com/2008_05_01_archive.html">May</A> (5) 
  <LI class=archivedate><A 
  href="http://zhengol.blogspot.com/2008_01_01_archive.html">January</A> (1) 
  <LI class=archivedate><A 
  href="http://zhengol.blogspot.com/2007_12_01_archive.html">December</A> (3) 
  <LI class=archivedate><A 
  href="http://zhengol.blogspot.com/2007_11_01_archive.html">November</A> (10) 
  <LI class=archivedate><A 
  href="http://zhengol.blogspot.com/2007_08_01_archive.html">August</A> (12) 
  <LI class=archivedate><A 
  href="http://zhengol.blogspot.com/2007_07_01_archive.html">July</A> (14) 
</LI></UL></DIV></DIV>
<DIV class=clear></DIV><SPAN class=widget-item-control><SPAN 
class="item-control blog-admin"><A class=quickedit title=Edit 
onclick='return _WidgetManager._PopupConfig(document.getElementById("BlogArchive1"));' 
href="http://www.blogger.com/rearrange?blogID=4956808384161899942&amp;widgetType=BlogArchive&amp;widgetId=BlogArchive1&amp;action=editWidget" 
target=configBlogArchive1><IMG height=18 alt="" 
src="Zhengol Let's start here Perl_files/icon18_wrench_allbkg.png" width=18> 
</A></SPAN></SPAN>
<DIV class=clear></DIV></DIV></DIV>
<DIV class="widget Label" id=Label1>
<H2>Labels</H2>
<DIV class=widget-content>
<UL>
  <LI><A dir=ltr href="http://zhengol.blogspot.com/search/label/Angel">Angel 
  </A><SPAN dir=ltr>(1)</SPAN> 
  <LI><A dir=ltr 
  href="http://zhengol.blogspot.com/search/label/ClearCase">ClearCase </A><SPAN 
  dir=ltr>(10)</SPAN> 
  <LI><A dir=ltr 
  href="http://zhengol.blogspot.com/search/label/ClearQuest">ClearQuest 
  </A><SPAN dir=ltr>(31)</SPAN> 
  <LI><A dir=ltr href="http://zhengol.blogspot.com/search/label/CMMI">CMMI 
  </A><SPAN dir=ltr>(2)</SPAN> 
  <LI><A dir=ltr href="http://zhengol.blogspot.com/search/label/English">English 
  </A><SPAN dir=ltr>(12)</SPAN> 
  <LI><A dir=ltr href="http://zhengol.blogspot.com/search/label/Family">Family 
  </A><SPAN dir=ltr>(1)</SPAN> 
  <LI><SPAN dir=ltr>Perl </SPAN><SPAN dir=ltr>(9)</SPAN> 
  <LI><A dir=ltr href="http://zhengol.blogspot.com/search/label/SCM">SCM 
  </A><SPAN dir=ltr>(28)</SPAN> 
  <LI><A dir=ltr 
  href="http://zhengol.blogspot.com/search/label/Social%20Issues">Social Issues 
  </A><SPAN dir=ltr>(3)</SPAN> 
  <LI><A dir=ltr 
  href="http://zhengol.blogspot.com/search/label/Technical">Technical </A><SPAN 
  dir=ltr>(38)</SPAN> 
  <LI><A dir=ltr href="http://zhengol.blogspot.com/search/label/ç¬ç¬">笑笑 
  </A><SPAN dir=ltr>(1)</SPAN> </LI></UL>
<DIV class=clear></DIV><SPAN class=widget-item-control><SPAN 
class="item-control blog-admin"><A class=quickedit title=Edit 
onclick='return _WidgetManager._PopupConfig(document.getElementById("Label1"));' 
href="http://www.blogger.com/rearrange?blogID=4956808384161899942&amp;widgetType=Label&amp;widgetId=Label1&amp;action=editWidget" 
target=configLabel1><IMG height=18 alt="" 
src="Zhengol Let's start here Perl_files/icon18_wrench_allbkg.png" width=18> 
</A></SPAN></SPAN>
<DIV class=clear></DIV></DIV></DIV></DIV></DIV></DIV></DIV>
<DIV id=footer-wrap1>
<DIV id=footer-wrap2>
<DIV class="footer section" id=footer></DIV></DIV></DIV></DIV>
<SCRIPT src="Zhengol Let's start here Perl_files/1011696215-widgets.js" 
type=text/javascript></SCRIPT>

<SCRIPT type=text/javascript>
_WidgetManager._Init('http://www.blogger.com/rearrange?blogID=4956808384161899942', 'http://zhengol.blogspot.com/search/label/Perl','4956808384161899942');
_WidgetManager._SetPageActionUrl('http://www.blogger.com/display?blogID=4956808384161899942', '4sCj5RcUWP79DRIgPtYxnGGSpZU:1236315938733');
_WidgetManager._SetDataContext([{'name': 'blog', 'data': {'title': 'Zhengol: Let\47s start here', 'pageType': 'index', 'url': 'http://zhengol.blogspot.com/search/label/Perl', 'homepageUrl': 'http://zhengol.blogspot.com/', 'pageName': 'Perl', 'pageTitle': 'Zhengol: Let\47s start here: Perl', 'encoding': 'UTF-8', 'isPrivate': false, 'languageDirection': 'ltr', 'feedLinks': '\74link rel\75\42alternate\42 type\75\42application/atom+xml\42 title\75\42Zhengol: Let\47s start here - Atom\42 href\75\42http://zhengol.blogspot.com/feeds/posts/default\42 /\76\n\74link rel\75\42alternate\42 type\75\42application/rss+xml\42 title\75\42Zhengol: Let\47s start here - RSS\42 href\75\42http://zhengol.blogspot.com/feeds/posts/default?alt\75rss\42 /\76\n\74link rel\75\42service.post\42 type\75\42application/atom+xml\42 title\75\42Zhengol: Let\47s start here - Atom\42 href\75\42http://www.blogger.com/feeds/4956808384161899942/posts/default\42 /\76\n\74link rel\75\42EditURI\42 type\75\42application/rsd+xml\42 title\75\42RSD\42 href\75\42http://www.blogger.com/rsd.g?blogID\0754956808384161899942\42 /\076', 'meTag': '\74link rel\75\42me\42 href\75\42http://www.blogger.com/profile/00847477265238671590\42 /\76\n', 'openIdOpTag': '\74link rel\75\42openid.server\42 href\75\42http://www.blogger.com/openid-server.g\42 /\76\n', 'latencyHeadScript': '\74script type\75\42text/javascript\42\76(function() { var a\75window;function d(){this.t\75{};this.tick\75function(b,c){this.t[b]\75[(new Date).getTime(),c]};this.tick(\42start\42)}var e\75new d;a.jstiming\75{Timer:d,load:e};if(a.external\46\46a.external.pageT)a.jstiming.pt\75a.external.pageT;function f(b){var c\0750;if(b.offsetParent){do c+\75b.offsetTop;while(b\75b.offsetParent)}return c}a.tickAboveFold\75function(b){f(b)\74\075750\46\46a.jstiming.load.tick(\42aft\42)};var g\75false;function h(){if(!g){g\75true;a.jstiming.load.tick(\42firstScrollTime\42)}}a.addEventListener?a.addEventListener(\42scroll\42,h,false):a.attachEvent(\42onscroll\42,h); })();\74/script\076'}}]);
_WidgetManager._SetSystemMarkup({'layout': {'varName': '', 'template': '\74div class\75\47widget-wrap1\47\76\n\74div class\75\47widget-wrap2\47\76\n\74div class\75\47widget-wrap3\47\76\n\74div class\75\47widget-content\47\76\n\74div class\75\47layout-title\47\76\74data:layout-title\76\74/data:layout-title\76\74/div\76\n\74a class\75\47editlink\47 expr:href\75\47data:widget.quickEditUrl\47 expr:onclick\75\47\46quot;return _WidgetManager._PopupConfig(document.getElementById(\\\46quot;\46quot; +       data:widget.instanceId + \46quot;\\\46quot;));\46quot;\47 target\75\47chooseWidget\47\76\74data:edit-link\76\74/data:edit-link\76\74/a\76\n\74/div\76\n\74/div\76\n\74/div\76\n\74/div\076'}, 'quickedit': {'varName': '', 'template': '\74div class\75\47clear\47\76\74/div\76\n\74span class\75\47widget-item-control\47\76\n\74span class\75\47item-control blog-admin\47\76\n\74a class\75\47quickedit\47 expr:href\75\47data:widget.quickEditUrl\47 expr:onclick\75\47\46quot;return _WidgetManager._PopupConfig(document.getElementById(\\\46quot;\46quot; +       data:widget.instanceId + \46quot;\\\46quot;));\46quot;\47 expr:target\75\47\46quot;config\46quot; + data:widget.instanceId\47 expr:title\75\47data:edit-link\47\76\n\74img alt\75\47\47 height\75\04718\47 src\75\47http://img1.blogblog.com/img/icon18_wrench_allbkg.png\47 width\75\04718\47/\76\n\74/a\76\n\74/span\76\n\74/span\76\n\74div class\75\47clear\47\76\74/div\076'}, 'all-head-content': {'varName': 'page', 'template': '\74data:blog.latencyHeadScript\76\74/data:blog.latencyHeadScript\76\n\74meta expr:content\75\47\46quot;text/html; charset\75\46quot; + data:page.encoding\47 http-equiv\75\47Content-Type\47/\76\n\74meta content\75\47true\47 name\75\47MSSmartTagsPreventParsing\47/\76\n\74meta content\75\47blogger\47 name\75\47generator\47/\76\n\74link href\75\47http://www.blogger.com/favicon.ico\47 rel\75\47icon\47 type\75\47image/vnd.microsoft.icon\47/\76\n\74data:blog.feedLinks\76\74/data:blog.feedLinks\76\n\74data:blog.meTag\76\74/data:blog.meTag\76\n\74data:blog.openIdOpTag\76\74/data:blog.openIdOpTag\76\n\74b:if cond\75\47data:page.isPrivate\47\76\n\74meta content\75\47NOINDEX,NOFOLLOW\47 name\75\47robots\47/\76\n\74/b:if\076'}});
_WidgetManager._RegisterWidget('_SlideshowView', new _WidgetInfo('Slideshow1', 'sidebartop',{'main': {'varName': '', 'template': '\74b:if cond\75\47data:title !\75 \46quot;\46quot;\47\76\n\74h2 class\75\47title\47\76\74data:title\76\74/data:title\76\74/h2\76\n\74/b:if\76\n\74div class\75\47widget-content\47\76\n\74div class\75\47slideshow-container\47 expr:id\75\47data:widget.instanceId + \46quot;_slideshow\46quot;\47\76\n\74span class\75\47slideshow-status\47\76Loading...\74/span\76\n\74/div\76\n\74/div\76\n\74b:include name\75\47quickedit\47\76\74/b:include\076'}}, document.getElementById('Slideshow1'), {'title': 'Slideshow', 'computedFeed': 'http://picasaweb.google.com/data/feed/base/user/zheng.oliver/albumid/5271710864649358897?alt\75rss\46hl\75en_US', 'linkNewWindow': false}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_TextListView', new _WidgetInfo('TextList1', 'sidebar',{'main': {'varName': '', 'template': '\74h2\76\74data:title\76\74/data:title\76\74/h2\76\n\74div class\75\47widget-content\47\76\n\74ul\76\n\74b:loop values\75\47data:items\47 var\75\47item\47\76\n\74li\76\74data:item\76\74/data:item\76\74/li\76\n\74/b:loop\76\n\74/ul\76\n\74b:include name\75\47quickedit\47\76\74/b:include\76\n\74/div\076'}}, document.getElementById('TextList1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_BlogArchiveView', new _WidgetInfo('BlogArchive1', 'sidebar',{'main': {'varName': '', 'template': '\74b:if cond\75\47data:title\47\76\n\74h2\76\74data:title\76\74/data:title\76\74/h2\76\n\74/b:if\76\n\74div class\75\47widget-content\47\76\n\74div id\75\47ArchiveList\47\76\n\74div expr:id\75\47data:widget.instanceId + \46quot;_ArchiveList\46quot;\47\76\n\74b:if cond\75\47data:style \75\75 \46quot;HIERARCHY\46quot;\47\76\n\74b:include data\75\47data\47 name\75\47interval\47\76\74/b:include\76\n\74/b:if\76\n\74b:if cond\75\47data:style \75\75 \46quot;FLAT\46quot;\47\76\n\74b:include data\75\47data\47 name\75\47flat\47\76\74/b:include\76\n\74/b:if\76\n\74b:if cond\75\47data:style \75\75 \46quot;MENU\46quot;\47\76\n\74b:include data\75\47data\47 name\75\47menu\47\76\74/b:include\76\n\74/b:if\76\n\74/div\76\n\74/div\76\n\74b:include name\75\47quickedit\47\76\74/b:include\76\n\74/div\076'}, 'flat': {'varName': 'data', 'template': '\74ul\76\n\74b:loop values\75\47data:data\47 var\75\47i\47\76\n\74li class\75\47archivedate\47\76\n\74a expr:href\75\47data:i.url\47\76\74data:i.name\76\74/data:i.name\76\74/a\76 (\74data:i.post-count\76\74/data:i.post-count\76)\n      \74/li\76\n\74/b:loop\76\n\74/ul\076'}, 'menu': {'varName': 'data', 'template': '\74select expr:id\75\47data:widget.instanceId + \46quot;_ArchiveMenu\46quot;\47\76\n\74option value\75\47\47\76\74data:title\76\74/data:title\76\74/option\76\n\74b:loop values\75\47data:data\47 var\75\47i\47\76\n\74option expr:value\75\47data:i.url\47\76\74data:i.name\76\74/data:i.name\76 (\74data:i.post-count\76\74/data:i.post-count\76)\74/option\76\n\74/b:loop\76\n\74/select\076'}, 'interval': {'varName': 'intervalData', 'template': '\74b:loop values\75\47data:intervalData\47 var\75\47i\47\76\n\74ul\76\n\74li expr:class\75\47\46quot;archivedate \46quot; + data:i.expclass\47\76\n\74b:include data\75\47i\47 name\75\47toggle\47\76\74/b:include\76\n\74a class\75\47post-count-link\47 expr:href\75\47data:i.url\47\76\74data:i.name\76\74/data:i.name\76\74/a\76\n\74span class\75\47post-count\47 dir\75\47ltr\47\76(\74data:i.post-count\76\74/data:i.post-count\76)\74/span\76\n\74b:if cond\75\47data:i.data\47\76\n\74b:include data\75\47i.data\47 name\75\47interval\47\76\74/b:include\76\n\74/b:if\76\n\74b:if cond\75\47data:i.posts\47\76\n\74b:include data\75\47i.posts\47 name\75\47posts\47\76\74/b:include\76\n\74/b:if\76\n\74/li\76\n\74/ul\76\n\74/b:loop\076'}, 'toggle': {'varName': 'interval', 'template': '\74b:if cond\75\47data:interval.toggleId\47\76\n\74b:if cond\75\47data:interval.expclass \75\75 \46quot;expanded\46quot;\47\76\n\74a class\75\47toggle\47 expr:href\75\47data:widget.actionUrl + \46quot;\46amp;action\75toggle\46quot; +       \46quot;\46amp;dir\75close\46amp;toggle\75\46quot; + data:interval.toggleId +       \46quot;\46amp;toggleopen\75\46quot; + data:toggleopen\47\76\n\74span class\75\47zippy toggle-open\47\76\46#9660; \74/span\76\n\74/a\76\n\74b:else\76\74/b:else\76\n\74a class\75\47toggle\47 expr:href\75\47data:widget.actionUrl + \46quot;\46amp;action\75toggle\46quot; +         \46quot;\46amp;dir\75open\46amp;toggle\75\46quot; + data:interval.toggleId +         \46quot;\46amp;toggleopen\75\46quot; + data:toggleopen\47\76\n\74span class\75\47zippy\47\76\n\74b:if cond\75\47data:blog.languageDirection \75\75 \46quot;rtl\46quot;\47\76\n              \46#9668;\n            \74b:else\76\74/b:else\76\n              \46#9658;\n            \74/b:if\76\n\74/span\76\n\74/a\76\n\74/b:if\76\n\74/b:if\076'}, 'posts': {'varName': 'posts', 'template': '\74ul class\75\47posts\47\76\n\74b:loop values\75\47data:posts\47 var\75\47i\47\76\n\74li\76\74a expr:href\75\47data:i.url\47\76\74data:i.title\76\74/data:i.title\76\74/a\76\74/li\76\n\74/b:loop\76\n\74/ul\076'}}, document.getElementById('BlogArchive1'), {'languageDirection': 'ltr'}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_LabelView', new _WidgetInfo('Label1', 'sidebar',{'main': {'varName': '', 'template': '\74b:if cond\75\47data:title\47\76\n\74h2\76\74data:title\76\74/data:title\76\74/h2\76\n\74/b:if\76\n\74div class\75\47widget-content\47\76\n\74ul\76\n\74b:loop values\75\47data:labels\47 var\75\47label\47\76\n\74li\76\n\74b:if cond\75\47data:blog.url \75\75 data:label.url\47\76\n\74span expr:dir\75\47data:blog.languageDirection\47\76\n\74data:label.name\76\74/data:label.name\76\n\74/span\76\n\74b:else\76\74/b:else\76\n\74a expr:dir\75\47data:blog.languageDirection\47 expr:href\75\47data:label.url\47\76\n\74data:label.name\76\74/data:label.name\76\n\74/a\76\n\74/b:if\76\n\74span dir\75\47ltr\47\76(\74data:label.count\76\74/data:label.count\76)\74/span\76\n\74/li\76\n\74/b:loop\76\n\74/ul\76\n\74b:include name\75\47quickedit\47\76\74/b:include\76\n\74/div\076'}}, document.getElementById('Label1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HeaderView', new _WidgetInfo('Header1', 'header'));
_WidgetManager._RegisterWidget('_NavbarView', new _WidgetInfo('Navbar1', 'navbar'));
_WidgetManager._RegisterWidget('_ProfileView', new _WidgetInfo('Profile1', 'main',{'main': {'varName': '', 'template': '\74b:if cond\75\47data:title !\75 \46quot;\46quot;\47\76\n\74h2\76\74data:title\76\74/data:title\76\74/h2\76\n\74/b:if\76\n\74div class\75\47widget-content\47\76\n\74b:if cond\75\47data:team \75\75 \46quot;true\46quot;\47\76\n\74ul\76\n\74b:loop values\75\47data:authors\47 var\75\47i\47\76\n\74li\76\74a expr:href\75\47data:i.userUrl\47\76\74data:i.display-name\76\74/data:i.display-name\76\74/a\76\74/li\76\n\74/b:loop\76\n\74/ul\76\n\74b:else\76\74/b:else\76\n\74b:if cond\75\47data:photo.url !\75 \46quot;\46quot;\47\76\n\74a expr:href\75\47data:userUrl\47\76\74img class\75\47profile-img\47 expr:alt\75\47data:photo.alt\47 expr:height\75\47data:photo.height\47 expr:src\75\47data:photo.url\47 expr:width\75\47data:photo.width\47/\76\74/a\76\n\74/b:if\76\n\74dl class\75\47profile-datablock\47\76\n\74dt class\75\47profile-data\47\76\74data:displayname\76\74/data:displayname\76\74/dt\76\n\74b:if cond\75\47data:showlocation \75\75 \46quot;true\46quot;\47\76\n\74dd class\75\47profile-data\47\76\74data:location\76\74/data:location\76\74/dd\76\n\74/b:if\76\n\74b:if cond\75\47data:aboutme !\75 \46quot;\46quot;\47\76\74dd class\75\47profile-textblock\47\76\74data:aboutme\76\74/data:aboutme\76\74/dd\76\74/b:if\76\n\74/dl\76\n\74a class\75\47profile-link\47 expr:href\75\47data:userUrl\47\76\74data:viewProfileMsg\76\74/data:viewProfileMsg\76\74/a\76\n\74/b:if\76\n\74b:include name\75\47quickedit\47\76\74/b:include\76\n\74/div\076'}}, document.getElementById('Profile1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_BlogView', new _WidgetInfo('Blog1', 'main'));
</SCRIPT>
</FONT></SPAN></BODY></HTML>
